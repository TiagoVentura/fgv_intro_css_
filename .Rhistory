xaringan::inf_mr()
xaringan::inf_mr()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message=FALSE, warning = FALSE, error = FALSE)
class(3)
class(TRUE)
class(meu_numero_da_sorte)
class(meu_numero_da_sorte==13)
class(meu_numero_da_sorte)
numero_da_sorte=13
class(meu_numero_da_sorte)
class(meu_numero_da_sorte==13)
?opts_chunck
?opts_chunk
xaringan::inf_mr()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message=FALSE, warning = FALSE, error = FALSE)
dfake <- data.frame(normal=rnorm(100, 0, 1),
uniform=runif(100, 0, 1),
pois=rpois(100, 10))
# write.function(data, name_to_be_saved)
write.csv(dfake, "dfake.csv")
getwd()
xaringan::inf_mr()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
xaringan::inf_mr()
xaringan::inf_mr()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
dir.create("dados")
list.files()
getwd()
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE , error=TRUE)
# Chunk 2
knitr::include_graphics("figs/pasta_artigos.png")
# Chunk 6
setwd("tiago/wd/dropbox/arquivo/aula")
#install.packages("here")
library(here)
list.files()
dir.create(here("exemplo_para_aula"))
list.files()
ggplot(mtcars, aes(x = mpg, y = wt)) +
geom_point()
library(tidyverse)
ggplot(mtcars, aes(x = mpg, y = wt)) +
geom_point()
ggsave(here("exemplo_para_aula", "grafico.png")) # endereço , nome do arquivo
list.files(here("exemplo_para_aula"))
xaringan::inf_mr()
xaringan::inf_mr()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
10 %>% rerun(rnorm(5))
rerun(10, print(mtcars))
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
xaringan::inf_mr()
xaringan::inf_mr()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message=FALSE, warning = FALSE, error = FALSE)
# Crie um objeto
x <- sample(1:100, 10)
# Aplique a função para extrair a média
mean(x)
library(countdown)
countdown(minutes = 5, seconds = 0, top = 0,
right = 0,
padding = "10px",
margin = "5%",
font_size = "3em")
knitr::include_graphics("../../content/Tutoriais/figs/c_help.png")
some_me <- function( argument1, argument2 ){
value <- argument1 + argument2
return(value) # "return" define qual o output da sua função.
}
some_me(2,3)
some_me(100,123)
some_me(60,3^4)
cidades_onde_morei <- c("belem", "sao paulo", "rio de janeiro",
"berlim", "brasilia", "dc", "rio de janeiro")
# for loop
for(cidades in cidades_onde_morei){ #iterador
# o que repetir
print(cidades)
}
# Loop usando as posições.
for(i in 1:length(cidades_onde_morei)){ #iterador
# o que repetir
print(i)
print(cidades_onde_morei[i])
}
library(bakeoff)
data("ratings_seasons")
# Quantas temporadas?
temporadas <- unique(ratings_seasons$series)
temporadas
# Média de visualizacao
#Temporada 1
temporada_1 <- ratings_seasons[ratings_seasons$series==temporadas[1],]
#Temporada 2
temporada_2 <- ratings_seasons[ratings_seasons$series==temporadas[2], ]
#Temporada 3
temporada_3 <- ratings_seasons[ratings_seasons$series==temporadas[3],]
# Mean
mean(temporada_1$viewers_7day)
# Crie um container para salvar seus outputs
container <- list()
for(i in 1:length(temporadas)){ # Passo 1
# Passo 2
temp=ratings_seasons[ratings_seasons$series==temporadas[i], ]
# Passo 3
container[[i]] <- mean(temp$viewers_7day)
}
container
# Crie um container para salvar seus outputs
container <- list()
for(i in 1:length(temporadas)){
temp=ratings_seasons[ratings_seasons$series==temporadas[i], ]
container <- mean(temp$viewers_7day)  #<<
}
container
container <- list()
for(i in temporadas){ #<<
temp=ratings_seasons[ratings_seasons$series==i, ] #<<
container[[i]] <- mean(temp$viewers_7day) #<<
}
container
some_me <- function(argument1, argument2 ){
value <- argument1 + argument2
return(value) # "return" define qual o output da sua função.
}
some_me(2,3)
cidades_onde_morei <- c("belem", "sao paulo", "rio de janeiro",
"berlim", "brasilia", "dc", "rio de janeiro")
# for loop
for(i in cidades_onde_morei){ #iterador
# o que repetir
print(i)
}
# for loop
for(x in cidades_onde_morei){ #iterador
# o que repetir
print(x)
}
# for loop
for(cidades in cidades_onde_morei){ #iterador
# o que repetir
print(cidades)
}
# for loop
cid <- list()
for(cidades in cidades_onde_morei){ #iterador
# o que repetir
print(cidades)
# Guardar
cid[[cidades]] <- cidades
}
cid
for(i in 1:length(cidades_onde_morei)){ #iterador
# o que repetir
print(i)
print(cidades_onde_morei[i])
}
1:length(cidades_onde_morei)
for(i in 1:length(cidades_onde_morei)){ #iterador
# o que repetir
print(i)
print(cidades_onde_morei)
}
for(tiago in 1:length(cidades_onde_morei)){ #iterador
# o que repetir
print(tiago)
print(cidades_onde_morei[tiago])
}
flibrary(bakeoff)
library(bakeoff)
data("ratings_seasons")
ratings_seasons
glimpse(ratings_seasons)
library(tidyverse)
glimpse(ratings_seasons)
# Quantas temporadas?
temporadas <- unique(ratings_seasons$series)
temporadas
#Temporada 1
temporada_1 <- ratings_seasons[ratings_seasons$series==temporadas[1],]
temporada_1
#Temporada 2
temporada_2 <- ratings_seasons[ratings_seasons$series==temporadas[2], ]
temporada_2
#Temporada 3
temporada_3 <- ratings_seasons[ratings_seasons$series==temporadas[3],]
# Mean
mean(temporada_1$viewers_7day)
mean(temporada_2$viewers_7day)
mean(temporada_3$viewers_7day)
container <- list()
for(i in 1:length(temporadas)){ # Passo 1
# Passo 2
temp=ratings_seasons[ratings_seasons$series==temporadas[i], ]
# Passo 3
container[[i]] <- mean(temp$viewers_7day)
}
container
for(i in 1:length(temporadas)){ # Passo 1
# Passo 2
temp=ratings_seasons[ratings_seasons$series==temporadas[i], ]
# Passo 3
container[[i]] <- mean(temp$viewers_7day)
}
container
container
container
for(i in 1:length(temporadas)){ # Passo 1
# Passo 2
temp=ratings_seasons[ratings_seasons$series==temporadas[i], ]
# Passo 3
container <- mean(temp$viewers_7day)
}
container
for(i in 1:length(temporadas)){ # Passo 1
# Passo 2
temp=ratings_seasons[ratings_seasons$series==temporadas[i], ]
# Passo 3
container <- mean(temp$viewers_7day)
}
i
temp
1:length(temporadas)
length(temporadas)
1:length(temporadas)
temporadas
for(i in cidades_onde_morei){
print(i)
print(cidades_onde_morei)
}
for(i in cidades_onde_morei){
print(i)
}
1:length(cidades_onde_morei)
1:length(cidades_onde_morei)
ano=2021
ano=2021
if(ano>=2018) {
print("Que saudade de 2013!!")
} else {
print("2013 foi o pior ano da história do Brasil!")
}
ano=2000
if(ano>=2018) {
print("Que saudade de 2013!!")
} else {
print("2013 foi o pior ano da história do Brasil!")
}
d <- c("NA", 1, 2, 3, 4, 5)
mean(d)
if(idade>=65) {
print("Vacina em Fevereiro")
} else if(idade > 60 & idade <65) {
print("Vacina até junho")
} else {
print("Espere 2022")
}
idade= 30
idade > 60 & idade <65
idade = 100
idade = "texto"
idade >60
idade = "texto"
idade >60
idade = "texto"
idade
idade > 60
if(idade>=65) {
print("Vacina em Fevereiro")
} else if(idade > 60 & idade <65) {
print("Vacina até junho")
} else {
print("Espere 2022")
}
if(idade>=65) {
print("Vacina em Fevereiro")
} else if(idade > 60 & idade <65) {
print("Vacina até junho")
} else {
print("Espere 2022")
}
idade = "texto"
idade = NA
if(idade>=65) {
print("Vacina em Fevereiro")
} else if(idade > 60 & idade <65) {
print("Vacina até junho")
} else {
print("Espere 2022")
}
idade = "dado"
idade > 60
idade
idade > 60
idade
idade > 60
idade = "-1
idade > 60
if(idade>=65) {
print("Vacina em Fevereiro")
} else if(idade > 60 & idade <65) {
print("Vacina até junho")
} else {
print("Espere 2022")
}
idade = -1
idade > 60
idade = NULL
idade > 60
if(idade>=65) {
print("Vacina em Fevereiro")
} else if(idade > 60 & idade <65) {
print("Vacina até junho")
} else {
print("Espere 2022")
}
if(is.numeric(idade)){
if(idade>=65) {
print("Vacina em Fevereiro")
} else if(idade > 60 & idade <65) {
print("Vacina até junho")
} else {
print("Espere 2022")
}
} else {
print("error")
}
if(is.numeric(idade)){
if(idade>=65) {
print("Vacina em Fevereiro")
} else if(idade > 60 & idade <65) {
print("Vacina até junho")
} else {
print("Espere 2022")
}
} else {
print("error")
}
is.numeric(idade)
idade
if(is.numeric(idade)){
if(idade>=65) {
print("Vacina em Fevereiro")
} else if(idade > 60 & idade <65) {
print("Vacina até junho")
} else {
print("Espere 2022")
}
} else {
print("error")
}
body(mean)
mtcars
for(i in 1:ncol(mtcars)){
mean(mtcars[,i])
}
print(mean(mtcars[,i]))
for(i in 1:ncol(mtcars)){
print(i)
print(mean(mtcars[,i]))
}
for(i in 1:ncol(mtcars)){
print(mean(mtcars[,i]))
}
glimpse(mtcars)
blogdown::serve_site()
read.csv("dados/mtcars.csv")
read.csv("/dados/mtcars.csv")
glimpse(d)
d <- read.csv("./dados/mtcars.csv")
getwd()
# dado salvo com rdata
load("./dados/effective_number_candidates.Rdata")
# dado salvo com rdata
load("./dados/effective_number_candidates.Rdata")
# dado salvo com rdata
load("effective_number_candidates.Rdata")
setwd("./content/assignment/dados")
# dado salvo com rdata
load("effective_number_candidates.Rdata")
d <- data.frame(nome=c("Tiago", "Rafaela", "Bernardo", "Talita", "Bruno"),
sobrenome=c("Ventura", "Rodrigues", "Cotrim", "Tanscheit", "Moreno"),
nasc=c("30-12-1986", "08-07-1988", "02-12-1984", "09-11-2000", "20-10-1982"))
d[d$nome=="Tiago",]
for(i in 1:ncol(mtcars)){
temp = mtcars[,i]
mean(temp)
class(temp)
length(unique(temp))
}
m=c()
class_ <- c()
m=c()
class_ <- c()
unique_v <- c()
for(i in 1:ncol(mtcars)){
temp = mtcars[,i]
m[i]=mean(temp)
class_[i]=class(temp)
unique_v[i]=length(unique(temp))
}
m=c()
class_ <- c()
unique_v <- c()
for(i in 1:ncol(mtcars)){
temp = mtcars[,i]
m[i]=mean(temp)
class_[i]=class(temp)
unique_v[i]=length(unique(temp))
}
m
class_
#Print
m
class_
unique_v
(x-mean(x))^2
var_t(c(1:10))
var_t <- function(x){
numerator = sum((x-mean(x))^2)
denominator=length(x)
variance=numerator/denominator
# retorno
return(variance)
}
var_t(c(1:10))
"Rio de Janeiro"==cidades_onde_morei
# Cre
cidades_onde_morei <- c("Belém", "São Paulo", "Rio de Janeiro", "Berlim", "Brasília", "Washington - DC")
"Rio de Janeiro"==cidades_onde_morei
if("Rio de Janeiro"==cidades_onde_morei){
print(TRUE)
} else FALSE
if("Rio de Janeiro"&&cidades_onde_morei){
print(TRUE)
} else FALSE
if("Rio de Janeiro"%in%cidades_onde_morei){
print(TRUE)
} else FALSE
tiago_morou <- function(x){
# Cre
cidades_onde_morei <- c("Belém", "São Paulo", "Rio de Janeiro", "Berlim", "Brasília", "Washington - DC")
if("Rio de Janeiro"%in%cidades_onde_morei){
print(TRUE)
} else FALSE
}
tiago_morou("Rio de Janeiro")
blogdown::build_site()
blogdown::build_site()

filter(NUM_TURNO==1) %>%
# agrupando por candidato presidencial
group_by(NUMERO_CANDIDATO, NUM_TURNO, NOME_UF) %>%
# Somando os votos em todo o estado.
summarise(voto_estado=sum(QTDE_VOTOS)) %>%
# Ordena
arrange(desc(voto_estado))
pres_rio %>%
# Somente primeiro turno
# agrupando por candidato presidencial
group_by(NUMERO_CANDIDATO, NUM_TURNO, NOME_UF) %>%
# Somando os votos em todo o estado.
summarise(voto_estado=sum(QTDE_VOTOS)) %>%
# Ordena
arrange(desc(voto_estado))
pres_rio %>%
# Somando os votos em todo o estado.
mutate(voto_estado=sum(QTDE_VOTOS))
pres_rio %>%
# Somando os votos em todo o estado.
summarise(voto_estado=sum(QTDE_VOTOS))
pres_rio %>%
# Somando os votos em todo o estado.
mutate(voto_estado=sum(QTDE_VOTOS)) %>%
select(voto_estado)
pres_rio %>%
# Somando os votos em todo o estado.
summarise(voto_estado=sum(QTDE_VOTOS))
pres_rio %>%
# Somando os votos em todo o estado.
summarize(voto_estado=sum(QTDE_VOTOS))
pres_rio %>%
# Somente primeiro turno
filter(NUM_TURNO==2) %>%
# agrupando por candidato presidencial
group_by(NUMERO_CANDIDATO) %>%
# Somando os votos em todo o estado.
summarise(voto_estado=sum(QTDE_VOTOS)) %>%
# Ordena
arrange(desc(voto_estado))
pres_rio %>%
# Somente primeiro turno
filter(NUM_TURNO==1) %>%
# agrupando por nome do municipio
group_by(NOME_MUNICIPIO) %>%
# Somando os votos em todo o estado.
summarise(voto_mun=sum(QTDE_VOTOS))
pres_rio %>%
# Somente primeiro turno
filter(NUM_TURNO==1) %>%
# agrupando por candidato presidencial
group_by(NUMERO_CANDIDATO, NOME_MESO) %>%
# soma de votos por município
summarise(voto_media=mean(QTDE_VOTOS),
voto_min=min(QTDE_VOTOS),
voto_max=max(QTDE_VOTOS))
pres_rio %>%
# Somente primeiro turno
filter(NUM_TURNO==1) %    >%
# agrupando por candidato presidencial
group_by(NUMERO_CANDIDATO, NOME_MESO) %>%
# soma de votos por município
summarise(voto_media=mean(QTDE_VOTOS),
voto_min=min(QTDE_VOTOS),
voto_max=max(QTDE_VOTOS))
pres_rio %>%
# Somente primeiro turno
filter(NUM_TURNO==1) %>%
# agrupando por candidato presidencial
group_by(NUMERO_CANDIDATO, NOME_MESO) %>%
# soma de votos por município
summarise(voto_media=mean(QTDE_VOTOS),
voto_min=min(QTDE_VOTOS),
voto_max=max(QTDE_VOTOS))
pres_rio %>%
# Somente primeiro turno
filter(NUM_TURNO==1) %>%
# agrupando por candidato presidencial
group_by(NUMERO_CANDIDATO) %>%
# Nova variável somando os votos em todo o estado.
mutate(voto_estado=sum(QTDE_VOTOS)) %>%
select(NUMERO_CANDIDATO, voto_estado)
pres_rio %>%
# Somente primeiro turno
filter(NUM_TURNO==1) %>%
# agrupando por candidato presidencial
group_by(NUMERO_CANDIDATO) %>%
# Nova variável somando os votos em todo o estado.
mutate(voto_estado=sum(QTDE_VOTOS))
pres_rio %>%
# Somente primeiro turno
filter(NUM_TURNO==1) %>%
# agrupando por candidato presidencial
group_by(NUMERO_CANDIDATO) %>%
# Nova variável somando os votos em todo o estado.
mutate(voto_estado=sum(QTDE_VOTOS)) %>%
select(NUMERO_CANDIDATO, voto_estado)
pres_rio %>%
# Somente primeiro turno
filter(NUM_TURNO==1) %>%
# agrupando por candidato presidencial
group_by(NUMERO_CANDIDATO) %>%
# Nova variável somando os votos em todo o estado.
summarise(voto_estado=sum(QTDE_VOTOS))
data <- data.frame(nome = c("Ana", "Maria", "Barbara", "João", "Luana", "José"),
Sobrenome = c("silva", "silva", "silva", "Souza","Costa", "Reis"),
Data_Nasc = c("02/03/1985", "05/06/1986", "07/08/1987", "12/7/1990", "12/06/1991", "12/03/1980"))
data
knitr::opts_chunk$set(eval = FALSE)
data <- data.frame(nome = c("Ana", "Maria", "Barbara", "João", "Luana", "José"), Sobrenome = c("silva", "silva", "silva", "Souza","Costa", "Reis"), Data_Nasc = c("02/03/1985", "05/06/1986", "07/08/1987", "12/7/1990", "12/06/1991", "12/03/1980"))
data
read.csv("mtcars.csv")
data <- data.frame(nome = c("Ana", "Maria", "Barbara", "João", "Luana", "José"),
Sobrenome = c("silva", "silva", "silva", "Souza","Costa", "Reis"),
Data_Nasc = c("02/03/1985", "05/06/1986", "07/08/1987", "12/7/1990", "12/06/1991", "12/03/1980"))
data
library(cepespR)
library(tidyverse)
# Banco Candidatos Brasil inteiro
candidatos <- get_candidates(year=2018, position="Federal Deputy") %>%
as_tibble()
# Banco Votos
votos <- get_votes(year = 2018, position="Federal Deputy", state="RJ") %>%
as_tibble()
library(cepespR)
library(tidyverse)
# Banco Candidatos Brasil inteiro
candidatos <- get_candidates(year=2018, position="Federal Deputy") %>%
as_tibble()
# Banco Votos
votos <- get_votes(year = 2018, position="Federal Deputy", state="RJ") %>%
as_tibble()
n_candidatos <- candidatos %>%
distinct(NOME_CANDIDATO)
dim(n_candidatos)
dim(candidatos)
candidatos
# Ou para confirmar
n_candidatos <- candidatos %>%
distinct(NUM_TITULO_ELEITORAL_CANDIDATO)
dim(n_candidatos)
# Ou para confirmar
n_candidatos <- candidatos %>%
count(NUM_TITULO_ELEITORAL_CANDIDATO)
n_candidatos
# Ou para confirmar
n_candidatos <- candidatos %>%
count(CPF_CANDIDATO)
n_candidatos
# Uma linha por candidato. Basta ver o número de linhas.
dim(candidatos)
# Ou para confirmar
n_candidatos <- candidatos %>%
count(CPF_CANDIDATO) %>%
arrange(desc(n))
n_candidatos
candidatos %>% filter(CPF_CANDIDATO=="00427876885")
candidatos %>% filter(CPF_CANDIDATO=="00427876885") %>% View()
# Ou para confirmar
n_candidatos <- candidatos %>%
distinct(CPF_CANDIDATO)
dim(n_candidatos)
# Uma linha por candidato. Basta ver o número de linhas.
dim(candidatos)
candidatos %>%
group_by(NUMERO_PARTIDO) %>%
summarise(n=n())
candidatos %>%
count(NUMERO_PARTIDO)
# Ou Count
candidatos %>%
count(NUMERO_PARTIDO) %>%
dim(.)
# Ou Count
candidatos %>%
count(NUMERO_PARTIDO) %>%
# Ou distinct
partidos <-candidatos %>%
distinct(NUMERO_PARTIDO)
# Ou Count
candidatos %>%
count(NUMERO_PARTIDO) %>%
# Ou distinct
partidos <-candidatos %>%
distinct(NUMERO_PARTIDO)
# Ou Count
candidatos %>%
count(NUMERO_PARTIDO) %>%
# Ou distinct
partidos <- candidatos %>%
distinct(NUMERO_PARTIDO)
# Ou distinct
partidos <- candidatos %>%
distinct(NUMERO_PARTIDO)
partidos
length(partidos$NUMERO_PARTIDO)
candidatos %>%
group_by(SIGLA_UF) %>%
summarise(n_candidatos=n())
votos
votos %>%
filter(QTDE_VOTOS > 0) %>%
distinct(NUMERO_CANDIDATO)
votos %>%
filter(QTDE_VOTOS > 0)
votos %>%
filter(QTDE_VOTOS > 0) %>%
count(NUMERO_CANDIDATO)
votos %>%
count(NUMERO_CANDIDATO)
range(votos$QTDE_VOTOS)
votos %>%
filter(QTDE_VOTOS > 0) %>%
count(NUMERO_CANDIDATO)
votos %>%
filter(QTDE_VOTOS > 0) %>%
distinct()
votos_mais1 <-votos %>%
filter(QTDE_VOTOS > 0) %>%
distinct(NUMERO_CANDIDATO)
dim(votos_mais1)
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
arrrange(desc(votos))
votos %>%
group_by(NOME_CANDIDATO,NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
arrange(desc(votos))
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
arrange(desc(votos))
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
top_n(1, wt="votos")
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
ungroup() %>%
top_n(1, wt="votos")
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
top_n(n=1, wt="votos")
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
top_n(n=10, wt="votos")
?top_n
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
slice_man(n=10, wt="votos")
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
slice_max(n=10, wt="votos")
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
slice_max(n=10, order_by="votos")
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
slice_max(n=1, order_by="votos")
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS))
?slice_max
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
ungroup() %>%
slice_max(n=1, order_by="votos")
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
ungroup() %>%
slice_max(n=10, order_by="votos")
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
ungroup() %>%
slice_max(10, order_by="votos")
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
ungroup()
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
ungroup() %>%
slice_max(10, order_by="votos")
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
ungroup() %>%
slice_max(order_by="votos", n=10)
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
ungroup()
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
ungroup() %>%
top_n(n=5, wt="votos")
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
top_n(n=5, wt=votos)
# Outra solução
votos %>%
group_by(NUMERO_CANDIDATO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
top_n(n=1, wt=votos)
votos
votos %>%
mutate(NR_PARTIDO=str_extract(NUMERO_CANDIDATO, "^.{2}")) %>%
select(NR_PARTIDO, NUMERO_CANDIDATO)
votos %>%
mutate(NR_PARTIDO=str_sub(NUMERO_CANDIDATO, 1, 2)) %>%
select(NR_PARTIDO, NUMERO_CANDIDATO)
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
votos %>%
mutate(total_votos=sum(QTDE_VOTOS))
votos %>%
mutate(total_votos=sum(QTDE_VOTOS)) %>%
pull(total_votos)
# Daqui pra frente é con vocês
votos %>%
mutate(total_votos=sum(QTDE_VOTOS)) %>%
group_by(NR_PARTIDO, total_votos) %>%
summarise(votos_pt=sum(QTDE_VOTOS))
# Esta é mais complexa. Para começar, estou criando para vocês a variável partido.
votos <- votos %>%
# nova variável com os primeiros dois numeros de cada candidato
# igual ao número do partido
mutate(NR_PARTIDO=str_sub(NUMERO_CANDIDATO, 1, 2)) %>%
select(NR_PARTIDO, NUMERO_CANDIDATO)
# Daqui pra frente é con vocês
votos %>%
mutate(total_votos=sum(QTDE_VOTOS)) %>%
group_by(NR_PARTIDO, total_votos) %>%
summarise(votos_pt=sum(QTDE_VOTOS))
# Daqui pra frente é con vocês
votos %>%
group_by(NR_PARTIDO) %>%
summarise(votos_pt=sum(QTDE_VOTOS))
votos %>%
group_by(NR_PARTIDO)
votos
# Esta é mais complexa. Para começar, estou criando para vocês a variável partido.
votos <- votos %>%
# nova variável com os primeiros dois numeros de cada candidato
# igual ao número do partido
mutate(NR_PARTIDO=str_sub(NUMERO_CANDIDATO, 1, 2))
# Esta é mais complexa. Para começar, estou criando para vocês a variável partido.
votos <- votos %>%
# nova variável com os primeiros dois numeros de cada candidato
# igual ao número do partido
mutate(NR_PARTIDO=str_sub(NUMERO_CANDIDATO, 1, 2))
# Daqui pra frente é con vocês
votos %>%
group_by(NR_PARTIDO) %>%
summarise(votos_pt=sum(QTDE_VOTOS))
# Banco Votos
votos <- get_votes(year = 2018, position="Federal Deputy", state="RJ") %>%
as_tibble()
# Esta é mais complexa. Para começar, estou criando para vocês a variável partido.
votos <- votos %>%
# nova variável com os primeiros dois numeros de cada candidato
# igual ao número do partido
mutate(NR_PARTIDO=str_sub(NUMERO_CANDIDATO, 1, 2))
# Daqui pra frente é con vocês
votos %>%
group_by(NR_PARTIDO) %>%
summarise(votos_pt=sum(QTDE_VOTOS))
# Daqui pra frente é con vocês
votos %>%
group_by(NR_PARTIDO) %>%
summarise(votos_pt=sum(QTDE_VOTOS)) %>%
mutate(votos_total=sum(votos_pt),
prop_votos=votos_pt/votos_total)
# Daqui pra frente é con vocês
votos %>%
group_by(NR_PARTIDO) %>%
summarise(votos_pt=sum(QTDE_VOTOS)) %>%
mutate(votos_total=sum(votos_pt),
prop_votos=votos_pt/votos_total) %>%
arrange(desc(prop_votos)) %>%
slice(1:10)
# Dica: `data %>% filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3) =  filtra somente os eleitos.
dep_rio %>%
filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3) %>%
mutate(NR_PARTIDO=str_sub(NUMERO_CANDIDATO, 1, 2))
# Dica: `data %>% filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3) =  filtra somente os eleitos.
dep_rio %>%
filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3) %>%
mutate(NR_PARTIDO=str_sub(NUMERO_CANDIDATO, 1, 2)) %>%
count(NR_PARTIDO)
dep_rio %>%
filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3)
# Dica: `data %>% filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3) =  filtra somente os eleitos.
dep_rio %>%
filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3) %>%
mutate(NR_PARTIDO=str_sub(NUMERO_CANDIDATO, 1, 2)) %>%
count(NR_PARTIDO)
# Dica: `data %>% filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3) =  filtra somente os eleitos.
dep_rio %>%
filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3) %>%
mutate(NR_PARTIDO=str_sub(NUMERO_CANDIDATO, 1, 2)) %>%
count(NR_PARTIDO) %>%
arrange(desc(n))
dep_rio
# Dica: `data %>% filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3) =  filtra somente os eleitos.
dep_rio %>%
filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3) %>%
count(NUMERO_PARTIDO) %>%
arrange(desc(n))
blogdown::build_site()
dep_rio
dep_rio %>%
arrange(DESPESA_MAX_CAMPANHA)
dep_rio %>%
arrange(DESPESA_MAX_CAMPANHA) %>%
select(NUMERO_CANDIDATO, NUMERO_PARTIDO, NOME_CANDIDATO)
```{r}
dep_rio %>%
arrange(DESPESA_MAX_CAMPANHA) %>%
select(DESPESA_MAX_CAMPANHA,
NUMERO_CANDIDATO, NUMERO_PARTIDO, NOME_CANDIDATO, NOME_URNA_CANDIDATO)
dep_rio %>%
arrange(desc(DESPESA_MAX_CAMPANHA)) %>%
select(DESPESA_MAX_CAMPANHA,
NUMERO_CANDIDATO, NUMERO_PARTIDO, NOME_CANDIDATO, NOME_URNA_CANDIDATO) %>%
slice(1)
table(dep_rio$DESPESA_MAX_CAMPANHA)
dep_rio$DESPESA_MAX_CAMPANHA
dep_rio
dep_rio %>%
group_by(CODIGO_SEXO)
dep_rio %>%
group_by(CODIGO_SEXO) %>%
summarise(votos=mean(QTDE_VOTOS, na.rm = TRUE))
dep_rio %>%
group_by(CODIGO_SEXO)
dep_rio %>%
group_by(DESCRICAO_SEXO) %>%
summarise(votos=mean(QTDE_VOTOS, na.rm = TRUE))
dep_rio %>%
group_by(DESCRICAO_SEXO) %>%
summarise(votos=sum(QTDE_VOTOS, na.rm = TRUE))
table(dep_rio$DESCRICAO_SEXO)
dep_rio %>%
group_by(DESCRICAO_SEXO)
dep_rio %>%
count(DESCRICAO_SEXO)
dep_rio %>%
group_by(DESCRICAO_SEXO) %>%
summarize(votos=sum(QTDE_VOTOS))
dep_rio %>%
group_by(DESCRICAO_SEXO) %>%
summarize(v=sum(QTDE_VOTOS))
dep_rio %>%
group_by(DESCRICAO_SEXO) %>%
summarize(v=max(QTDE_VOTOS))
dep_rio %>%
group_by(DESCRICAO_SEXO) %>%
summarise(votos=mean(QTD_VOTOS, na.rm = TRUE))
colnames(dep_rio)
dep_rio %>%
filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3)
dep_rio %>%
filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3) %>%
group_by(DESCRICAO_SEXO, NUMERO_PARTIDO) %>%
summarise(eleitos=n(.))
dep_rio %>%
filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3) %>%
count(DESCRICAO_SEXO, NUMERO_PARTIDO)
dep_rio %>%
filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3) %>%
count(DESCRICAO_SEXO, NUMERO_PARTIDO) %>%
arrange(DESCRICAO_SEXO)
dep_rio %>%
filter(COD_SIT_TOT_TURNO==2 | COD_SIT_TOT_TURNO==3) %>%
count(DESCRICAO_SEXO, NUMERO_PARTIDO) %>%
arrange(NUMERO_PARTIDO)
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()

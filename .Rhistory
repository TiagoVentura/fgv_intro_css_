html_attr("href")
read_html(minha_url) %>%
html_nodes(css="a") %>%
html_attr("href")
read_html(minha_url) %>%
html_attr("href")
read_html(minha_url) %>%
html_nodes(css=".col-lg-12") %>%
html_attr("href")
read_html(minha_url) %>%
html_nodes(css=".col-lg-12")
minha_url <- "http://www.alerj.rj.gov.br/Deputados/QuemSao"
read_html(minha_url) %>%
html_nodes(css="a")
read_html(minha_url) %>%
html_nodes(css=".nome a")
minha_url <- "http://www.alerj.rj.gov.br/Deputados/QuemSao"
nomes <- read_html(minha_url) %>%
html_nodes(css=".nome a") %>%
html_text()
nomes
nomes_limpos <- nomes %>%
str_to_title()
nomes_limpos
links <- read_html(minha_url) %>%
html_nodes(css=".nome a") %>%
html_attr("href")
links
links
links <- paste0("http://www.alerj.rj.gov.br/", links)
# Veja se funciona
browseURL(link[1])
# Veja se funciona
browseURL(links[1])
dados <- tibble(nomes=nomes,
links=links)
# url
url_dep1 <- dados$links[[1]]
#source
source <- url_dep1 %>% read_html()
source
source %>%
html_nodes(css=".margintop11") %>%
html_text()
biografia <- source %>%
html_nodes(css=".margintop11") %>%
html_text() %>%
paste0(., collapse = " ")
biografia
paertido <-  source %>%
html_nodes(css=".partido") %>%
html_text()
partido
partido <-  source %>%
html_nodes(css=".partido") %>%
html_text()
partido
telefone <- source %>%
html_nodes(css=".margin_bottom_5+ p") %>%
html_text()
telefone
email <- source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text()
# Informações de nosso interesse
nome <- dados$nomes[[1]]
link <- dados$links[[1]]
deputados <- tibble(nome, link, partido, biografia, telefone, email)
deputados
nome <- dados$nomes[[1]]
link <- dados$links[[1]]
partido <-  source %>%
html_nodes(css=".partido") %>%
html_text()
biografia <- source %>%
html_nodes(css=".margintop11") %>%
html_text() %>%
paste0(., collapse = " ")
telefone <- source %>%
html_nodes(css=".margin_bottom_5+ p") %>%
html_text()
email <- source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text()
deputados <- tibble(nome, link, partido, biografia, telefone, email)
deputados
View(deputados)
read_html(".link_canais") %>%
html_nodes(css=".link_canais")
read_html("https://www.al.sp.gov.br/deputado/lista/") %>%
html_nodes(css=".link_canais")
read_html("https://www.al.sp.gov.br/deputado/lista/") %>%
html_nodes(css=".link_canais") %>%
html_text()
nome <- read_html("https://www.al.sp.gov.br/deputado/lista/") %>%
html_nodes(css=".link_canais") %>%
html_text()
nome
nome <- read_html("https://www.al.sp.gov.br/deputado/lista/") %>%
html_nodes(css=".link_canais") %>%
html_attr("href")
nome
raspar_alerj <- function(dados){
# Informações de nosso interesse
nome <- dados$nomes[[1]]
link <- dados$links[[1]]
# Pega a source
source <- link %>%
read_html()
# extrai informação.
partido <-  source %>%
html_nodes(css=".partido") %>%
html_text()
biografia <- source %>%
html_nodes(css=".margintop11") %>%
html_text() %>%
paste0(., collapse = " ")
telefone <- source %>%
html_nodes(css=".margin_bottom_5+ p") %>%
html_text()
email <- source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text()
# Combina tudo como um banco de dados
deputados <- tibble(nome, link, partido, biografia, telefone, email)
deputados
# Output
return(deputados)
# Desligando R um pouco para nao sobrecarregar os dados
Sys.sleep(sample(5:10, 1))
}
# url
link <- dados$links[[1]]
#source
source <- link %>% read_html()
deputados <- tibble(link, partido, biografia, telefone, email)
deputados
link
nome <- source %>%
html_nodes(css=".paginacao_deputados .titulo") %>%
html_text()
nome
partido <-  source %>%
html_nodes(css=".partido") %>%
html_text() %>%
str_replace_all(., "\\r|\\n") %>%
str_trim()
nome <- source %>%
html_nodes(css=".paginacao_deputados .titulo") %>%
html_text() %>%
str_remove_all(., "\\r|\\n") %>%
str_trim()
nome
nome <- source %>%
html_nodes(css=".paginacao_deputados .titulo") %>%
html_text() %>%
str_remove_all(., "\\r|\\n") %>%
str_trim() %>%
str_squish()
nome
deputados <- tibble(nome, link, partido, biografia, telefone, email)
deputados
raspar_alerj <- function(url){
#source
source <- url_dep %>% read_html()
# informacao
nome <- source %>%
html_nodes(css=".paginacao_deputados .titulo") %>%
html_text() %>%
str_remove_all(., "\\r|\\n") %>%
str_trim() %>%
str_squish()
partido <-  source %>%
html_nodes(css=".partido") %>%
html_text() %>%
biografia <- source %>%
html_nodes(css=".margintop11") %>%
html_text() %>%
paste0(., collapse = " ")
telefone <- source %>%
html_nodes(css=".margin_bottom_5+ p") %>%
html_text()
email <- source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text()
# Combina tudo como um banco de dados
deputados <- tibble(nome, link, partido, biografia, telefone, email)
# Output
return(deputados)
# Desligando R um pouco para nao sobrecarregar os dados
Sys.sleep(sample(5:10, 1))
}
raspar_alerj(dados$links[[2]])
dados$links[[2]]
raspar_alerj <- function(url){
#source
source <- url_dep %>% read_html()
# informacao
nome <- source %>%
html_nodes(css=".paginacao_deputados .titulo") %>%
html_text() %>%
str_remove_all(., "\\r|\\n") %>%
str_trim() %>%
str_squish()
partido <-  source %>%
html_nodes(css=".partido") %>%
html_text() %>%
biografia <- source %>%
html_nodes(css=".margintop11") %>%
html_text() %>%
paste0(., collapse = " ")
telefone <- source %>%
html_nodes(css=".margin_bottom_5+ p") %>%
html_text()
email <- source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text()
# Combina tudo como um banco de dados
deputados <- tibble(nome, link, partido, biografia, telefone, email)
# Output
return(deputados)
# Desligando R um pouco para nao sobrecarregar os dados
Sys.sleep(sample(5:10, 1))
}
raspar_alerj <- function(url){
#source
source <- url %>% read_html()
# informacao
nome <- source %>%
html_nodes(css=".paginacao_deputados .titulo") %>%
html_text() %>%
str_remove_all(., "\\r|\\n") %>%
str_trim() %>%
str_squish()
partido <-  source %>%
html_nodes(css=".partido") %>%
html_text() %>%
biografia <- source %>%
html_nodes(css=".margintop11") %>%
html_text() %>%
paste0(., collapse = " ")
telefone <- source %>%
html_nodes(css=".margin_bottom_5+ p") %>%
html_text()
email <- source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text()
# Combina tudo como um banco de dados
deputados <- tibble(nome, link, partido, biografia, telefone, email)
# Output
return(deputados)
# Desligando R um pouco para nao sobrecarregar os dados
Sys.sleep(sample(5:10, 1))
}
raspar_alerj(dados$links[[2]])
url =dados$links[[2]]
#source
source <- url %>% read_html()
#source
source <- url %>% read_html()
nome <- source %>%
html_nodes(css=".paginacao_deputados .titulo") %>%
html_text() %>%
str_remove_all(., "\\r|\\n") %>%
str_trim() %>%
str_squish()
raspar_alerj <- function(url){
#source
source <- url %>% read_html()
# informacao
nome <- source %>%
html_nodes(css=".paginacao_deputados .titulo") %>%
html_text() %>%
str_remove_all(., "\\r|\\n") %>%
str_trim() %>%
str_squish()
partido <-  source %>%
html_nodes(css=".partido") %>%
html_text()
biografia <- source %>%
html_nodes(css=".margintop11") %>%
html_text() %>%
paste0(., collapse = " ")
telefone <- source %>%
html_nodes(css=".margin_bottom_5+ p") %>%
html_text()
email <- source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text()
# Combina tudo como um banco de dados
deputados <- tibble(nome, link, partido, biografia, telefone, email)
# Output
return(deputados)
# Desligando R um pouco para nao sobrecarregar os dados
Sys.sleep(sample(5:10, 1))
}
raspar_alerj(dados$links[[2]])
raspar_alerj(dados$links[[2]])
# Criar uma lista com diversas distribuições numéricas
lista1 <- list(a=rnorm(1000, 0, 1),
b=rnorm(1000, 1, 1),
c=rnorm(1000, 10, 1))
# Aplicar uma mesma função a todos os elementos desta lista.
map(lista1, mean)
# Igual a:
mean(lista1$a)
# Igual a:
mean(lista1$a); mean(lista1$b); mean(lista1$c)
map_df(lista1, mean)
map(lista1, ~ log(sum(.x)) + 100)
map(lista1, ~ log(abs(sum(.x))) + 100)
# Com funcao anonima.
map(lista1, function(x) log(abs(sum(x))) + 100)
# Converter os links para uma lista.
list_links <- as.list(dados$links)
dados <- map(lista_links, raspar_alerj)
# Converter os links para uma lista.
lista_links <- as.list(dados$links)
dados <- map(lista_links, raspar_alerj)
dados
dados <- map(lista_links[[10]], raspar_alerj)
for(i in 1:length(lista_links)){
raspar_alerj(lista_links[[i]])
print(i)
}
# Combine tudo como um banco de dados
raspar_alerj(lista_links[[7]])
lista_links[[7]]
url =dados$links[[7]]
#source
source <- url %>% read_html()
url =dados$links[[7]]
url
dados$links
links <- read_html(minha_url) %>%
html_nodes(css=".nome a") %>%
html_attr("href")
links <- read_html(minha_url) %>%
html_nodes(css=".nome a") %>%
html_attr("href")
links <- paste0("http://www.alerj.rj.gov.br/", links)
dados <- tibble(nomes=nomes,
links=links)
url = dados$links[[7]]
#source
source <- url %>% read_html()
nome <- source %>%
html_nodes(css=".paginacao_deputados .titulo") %>%
html_text() %>%
str_remove_all(., "\\r|\\n") %>%
str_trim() %>%
str_squish()
nome
partido <-  source %>%
html_nodes(css=".partido") %>%
html_text()
partido
biografia <- source %>%
html_nodes(css=".margintop11") %>%
html_text() %>%
paste0(., collapse = " ")
biografia
telefone <- source %>%
html_nodes(css=".margin_bottom_5+ p") %>%
html_text()
telefone
telefone <- source %>%
html_nodes(css=".margin_bottom_5+ p") %>%
html_text() %>%
paste0(., collapse = " ")
email <- source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text()
email
email <- source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text()
email
email <- source %>%
html_nodes(css=".descricao p:nth-child(7)") %>%
html_text()
email
url = dados$links[[1]]
email <- source %>%
html_nodes(css=".descricao p:nth-child(7)") %>%
html_text()
email
url = dados$links[[1]]
#source
source <- url %>% read_html()
email <- source %>%
html_nodes(css=".descricao p:nth-child(7)") %>%
html_text()
email
email <- source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text()
email
url = dados$links[[7]]
#source
source <- url %>% read_html()
email
url = dados$links[[7]]
#source
source <- url %>% read_html()
#source
source <- url %>% read_html()
email <- source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text()
email
source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text() %>%
paste0(., collapse = " ")
email <- source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text() %>%
paste0(., collapse = " ") %>%
str_subset(., "@")
email
raspar_alerj <- function(url){
#source
source <- url %>% read_html()
# informacao
nome <- source %>%
html_nodes(css=".paginacao_deputados .titulo") %>%
html_text() %>%
str_remove_all(., "\\r|\\n") %>%
str_trim() %>%
str_squish()
partido <-  source %>%
html_nodes(css=".partido") %>%
html_text()
biografia <- source %>%
html_nodes(css=".margintop11") %>%
html_text() %>%
paste0(., collapse = " ")
telefone <- source %>%
html_nodes(css=".margin_bottom_5+ p") %>%
html_text() %>%
paste0(., collapse = " ")
email <- source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text() %>%
paste0(., collapse = " ")
# Combina tudo como um banco de dados
deputados <- tibble(nome, link, partido, biografia, telefone, email)
# Output
return(deputados)
# Desligando R um pouco para nao sobrecarregar os dados
Sys.sleep(sample(5:10, 1))
}
raspar_alerj <- function(url){
#source
source <- url %>% read_html()
# informacao
nome <- source %>%
html_nodes(css=".paginacao_deputados .titulo") %>%
html_text() %>%
str_remove_all(., "\\r|\\n") %>%
str_trim() %>%
str_squish()
partido <-  source %>%
html_nodes(css=".partido") %>%
html_text()
biografia <- source %>%
html_nodes(css=".margintop11") %>%
html_text() %>%
paste0(., collapse = " ")
telefone <- source %>%
html_nodes(css=".margin_bottom_5+ p") %>%
html_text() %>%
paste0(., collapse = " ")
email <- source %>%
html_nodes(css="#formVisualizarPerfilDeputado p+ p") %>%
html_text() %>%
paste0(., collapse = " ")
# Combina tudo como um banco de dados
deputados <- tibble(nome, link, partido, biografia, telefone, email)
# Output
return(deputados)
# Desligando R um pouco para nao sobrecarregar os dados
Sys.sleep(sample(1:3, 1))
}
# Converter os links para uma lista.
lista_links <- as.list(dados$links)
dados <- map(lista_links[[10]], raspar_alerj)
for(i in 1:length(lista_links)){
raspar_alerj(lista_links[[i]])
print(i)
}
dados <- map(lista_links, raspar_alerj)
# Combine tudo como um banco de dados
dados_alerj <- bind_rows(dados)
# Vamos ver
kable(dados_alerj) %>%
kable_styling() %>%
scroll_box(width = "100%", height = "200px")
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
# url
link <- dados$links[[1]][1:10]
blogdown::serve_site()

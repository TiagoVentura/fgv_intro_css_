blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
x <- 5
y <- 7
# Variáveis de Texto.
nome <- "Tiago Ventura"
class()
class(nome)
# Verificar ambiente de trabalho
ls()
# Acessando os objetos
x+y
mean(x=c(5, 7))
x
devtools::install_github("gadenbuie/countdown")
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message=FALSE, warning = FALSE)
library(countdown)
countdown(minutes = 5, seconds = 0, bottom = 0,
padding = "50px",
margin = "5%",
font_size = "6em"))
meu_numero_da_sorte <- "13"
r_intro_css <- 10
r_intro_css
r_Intro_css
r_intro_css <- 10
r_Intro_css
r_intro_css_
?tribble
tibble::tribble(~ Examplo, ~ Tipo,
c("a", "swc"), "Character")
tibble::tribble(~ Examplo, ~ Tipo,
c("a", "swc"), "Character") %>%
kbl()
library(tidyverse)
library(kableExtra)
library(tidyverse)
tibble::tribble(~ Examplo, ~ Tipo,
c("a", "swc"), "Character") %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
meu_numero_da_sorte
class(meu_numero_da_sorte)
class(meu_numero_da_sorte==13)
class(meu_numero_da_sorte==13)
meu_numero_da_sorte
25 - "13"
log(-10)
x <- c(1, 2, 3, 4, NA)
x
mean(x)
is.numeric(2)
is.logical(TRUE)
is.character("2")
is.integer(1)
is.integer(1L)
is.factor("fa")
x <- c(1, 2, 3, 4, 5)
as.character(x)
num_1_5 <- c(1, 2, 3, 4, 5)
as.character(num_1_5)
# Checando
class(char_1_5)
# Altera a classe
char_1_5 <- as.character(num_1_5)
# Checando
class(char_1_5)
class(num_1_5)
# Ou
as.numeric("f")
# Ou
as.numeric("25")
false <- as.logical(false)
false <- "FALSE"
false <- as.logical(false)
false
class(false)
num <- sample(1:50, 5)
num
mean(x = sample(1:50, 5))
x
tribble(~Operador, ~`O que Faz`,
"<", 	"menor que",
"<="	, "menor ou igual que "
">"	, "maior que"
">="	, "maior ou igual que"
"=="	, "exatamente igual",
"!="	, "diferente",
"%in%", 	"é um objeto nesta lista") %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
tribble(~Operador, ~O_que_Faz,
"<", 	"menor que",
"<="	, "menor ou igual que "
">"	, "maior que"
">="	, "maior ou igual que"
"=="	, "exatamente igual",
"!="	, "diferente",
"%in%", 	"é um objeto nesta lista") %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
tribble(~Operador, ~O_que_Faz,
"<", 	"menor que",
"<="	, "menor ou igual que ",
">"	, "maior que",
">="	, "maior ou igual que",
"=="	, "exatamente igual",
"!="	, "diferente",
"%in%", 	"é um objeto nesta lista") %>%
kbl() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed"))
x%in%y
x <- 10
y <- 20
# Booleano Básico
x>y
x==y
x%in%y
# Operadores Lógicos
x & y
x
# Operadores Lógicos
x | y > 15
x & y > 15
x
y
x
(x & y) > 15
# Operadores Lógicos
(x | y) > 15
# Operadores Lógicos
x>15 | y > 15
x >15 & y > 15
x <- sample(10, 1:50)
x
x <- sample(10, 1:50)
x
sample(10, 1:50)
x <- sample(1:50, 10p)
x <- sample(1:50, 10)
x
x <- sample(-50:50, 10)
# Selecione somene números positivos
x[x>0]
# Selecione somene números positivos
x[x>0]
# Quais números são positivos?
x>0
# Posso selecionar eles?
x[x>0]
data
# vetor de números
vec_num <- c(1, 2.3, 4, 5, 6.78, 6:10)
# Class
class(vec_num)
# Length
length(vec_num)
# Coerce to a matrix
as.matrix(X)
# vetor de números
X <- c(1, 2.3, 4, 5, 6.78, 6:10)
X
# Class
class(X)
# Coerce to a matrix
as.matrix(X)
# Cria uma Matrix do zero
matrix(1:10, nrow=5, ncol=2)
as.list(X)
list<- list(X, data)
list
list<- list(X, as.matrix(X), as.character(X))
str(list)
data
data <- data.frame(name="Tiago", last_name="ventura", school="UMD", age=30)
data
# Coercing
as.data.frame(X)
data <- data.frame(name=c("Tiago", "Tiago"), last_name=c("ventura", "ventura") , school=c("UMD", "FGV"), age=c(30,32))
data
remotes::install_github("apreshill/bakeoff")
#devtools::install_github("apreshill/bakeoff")
library(bakeoff)
ls()
data("episode_results")
ls()
episode <- data("episode_results")
episode
episode_results
episode_results$technical_winners
bakers
episode
episode_results
episode_results$eliminated
ratings_seasons
series
# O que tenho no meu ambiente?
ls()
# ativa o banco de dados
data("bakers")
ls()
# Classe
class(bakers)
str(bakers)
glimpse(bakers)
bakers$occupation
bakers$occupation[1:10]
bakers[,1]
bakers$hometown
bakers[1, ]
bakers[1:5, ]
bakers$age
bakers[,"age"]
bakers$age
bakers[,"age"]
bakers[1:5, "age"]
head(bakers)
tail(bakers)
summary(bakers)
bakers[5:15, 3:5]
# Bakers com mais de 60 anos
bakers[bakers$age>60,]
#Bakers de Londers
bakers[bakers$hometown=="Londo",]
#Bakers de Londers
bakers[bakers$hometown=="London",]
getwd()
# Onde eu quero que olhe?
setwd("/home/venturat/Downloads")
list.files()
# Onde meu R está olhando?
getwd()
dfake <- data.frame(normal=rnorm(100, 0, 1),
uniform=runif(100, 0, 1),
pois=rpois(100, 0,1))
dfake <- data.frame(normal=rnorm(100, 0, 1),
uniform=runif(100, 0, 1),
pois=rpois(100, 0))
dfake
dfake <- data.frame(normal=rnorm(100, 0, 1),
uniform=runif(100, 0, 1),
pois=rpois(100, 10))
# write.function(data, name_to_be_saved)
write.csv(dfake, "dfake.csv")
# Checa diretorio
getwd()
# Ve arquivos neste diretorio
list.files()
dados <- read.csv("dfake.csv")
dados
library(bakeoff)
bakeoff::episode_results
# Crie um objeto
x <- sample(1:100, 10)
x
# Aplique a função para extrair a média
mean(x)
?c()
?c
bakeoff::episode_results
bakeoff::bakers
bakeoff::challenge_results
bakeoff::episode_results
bakeoff::ratings_seasons
bakeoff::ratings_seasons
data("ratings_seasons")
ratings_seasons
# Quantas temporadas?
temporadas <- unique(ratings_seasons$series)
temporadas
temporadas
temporadas[1]
ratings_seasons[ratings_seasons==temporadas[1], "viewers_7day"]
# Média de visualizacao
temporada_1 <- ratings_seasons[ratings_seasons$series==temporadas[1], "viewers_7day"]
temporada_1
mean(temporada_1)
temporada_1
mean(ratings_seasons[ratings_seasons$series==temporadas[1], "viewers_7day"])
# Média de visualizacao
temporada_1 <- ratings_seasons[ratings_seasons$series==temporadas[1], "viewers_7day"]
temporada_1
mean(temporada_1$viewers_7day)
for(i in item){ #iterador
# o que repetir
print(i)
}
for(cidades in cidades_onde_morei){ #iterador
# o que repetir
print(cidades)
}
cidades_onde_morei <- c("belem", "sao paulo", "rio de janeiro", "berlim", "brasilia", "dc", "rio de janeiro")
for(cidades in cidades_onde_morei){ #iterador
# o que repetir
print(cidades)
}
for(i in length(cidades_onde_morei)){ #iterador
# o que repetir
print[i]
print(cidades[i])
}
for(i in 1:length(cidades_onde_morei)){ #iterador
# o que repetir
print[i]
print(cidades[i])
}
length(cidades_onde_morei)
for(i in 1:length(cidades_onde_morei)){ #iterador
# o que repetir
print[i]
}
for(i in 1:length(cidades_onde_morei)){ #iterador
# o que repetir
print(i)
print(cidades[i])
}
for(i in 1:length(cidades_onde_morei)){ #iterador
# o que repetir
print(i)
print(cidades_onde_morei[i])
}
container <- list()
for(i in 1:length(temporadas)){
temp=ratings_seasons[ratings_seasons$series==temporadas[i], "viewers_7day"]
container[[i]] <- temp
}
container
# Crie um container para salvar seus outputs
container <- list()
for(i in 1:length(temporadas)){
temp=ratings_seasons[ratings_seasons$series==temporadas[i], "viewers_7day"]
container[[i]] <- mean(temp)
}
temp=ratings_seasons[ratings_seasons$series==temporadas[i], "viewers_7day"]
container[[i]] <- mean(temp$viewers_7day)
for(i in 1:length(temporadas)){
temp=ratings_seasons[ratings_seasons$series==temporadas[i], "viewers_7day"]
container[[i]] <- mean(temp$viewers_7day)
}
container
container <- list()
for(i in length(temporadas)){
temp=ratings_seasons[ratings_seasons$series==temporadas[i], "viewers_7day"]
container[[i]] <- mean(temp$viewers_7day)  ## Alteração aqui.
}
container
container <- list()
for(i in length(temporadas)){ # Aqui
temp=ratings_seasons[ratings_seasons$series==i, "viewers_7day"] # Aqui
container[[i]] <- mean(temp$viewers_7day)  ## Alteração aqui.
}
container
container <- list()
for(i in temporadas){ # Aqui
temp=ratings_seasons[ratings_seasons$series==i, "viewers_7day"] # Aqui
container[[i]] <- mean(temp$viewers_7day)  ## Alteração aqui.
}
container
cidades_onde_morei
if(ano=>2020) {
print("Não tem carnaval pra você, Otário!")
} else {
print("Que saudades do Carnaval")
}
if(ano>=2020) {
print("Não tem carnaval pra você, Otário!")
} else {
print("Que saudades do Carnaval")
}
ano=2021
if(ano>=2020) {
print("Não tem carnaval pra você, Otário!")
} else {
print("Que saudades do Carnaval")
}
idade= 30
if(idade>=65) {
print("Vacina em Fevereiro")
} else if(idade > 60 & idade <65) {
print("Vacina até junho")
} else {
print("Espere 2022")
}
x <- sample(1:100, 10)
class(x)
x
is.numeric(x)
x <- c(x, "a")
x
is.numeric(x)
x <- sample(1:100, 10)
media_tiago <- function(vector){
# advinhacao
if(is.numeric(x)){
# Calcule a média
mean(vector)
} else{
print("Seu vetor não é numérico")
}
}
media_tiago(x)
media_tiago("hello world")
media_tiago <- function(vector){
# advinhacao
if(is.numeric(vector)){
# Calcule a média
mean(vector)
} else{
print("Seu vetor não é numérico")
}
}
media_tiago(x)
media_tiago("hello world")
mtcars
getwd()
write_csv(mtcars, "mtcars.csv")
print_date <- function(year, month, day){
joined = paste(as.character(year), as.character(month), as.character(day), sep = "/")
return(joined)
}
print_date(day=1, month=2, year=2003)
print_date(1, 2, 2003)
mtcars
library(bakeoff)
episode
episodes
unique(episodes$series)
temporadas <- unique(episodes$series)
bakeoff::results
bakeoff::ratings_seasons
cidades_onde_morei <- c("Belém", "São Paulo", "Rio de Janeiro", "Berlim", "Brasília", "Washington - DC")
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
xaringan::inf_mr()
xaringan::inf_mr()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message=FALSE, warning = FALSE, error = FALSE)
class(3)
class(TRUE)
class(meu_numero_da_sorte)
class(meu_numero_da_sorte==13)
class(meu_numero_da_sorte)
numero_da_sorte=13
class(meu_numero_da_sorte)
class(meu_numero_da_sorte==13)
?opts_chunck
?opts_chunk
xaringan::inf_mr()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message=FALSE, warning = FALSE, error = FALSE)
dfake <- data.frame(normal=rnorm(100, 0, 1),
uniform=runif(100, 0, 1),
pois=rpois(100, 10))
# write.function(data, name_to_be_saved)
write.csv(dfake, "dfake.csv")
getwd()
xaringan::inf_mr()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
blogdown::build_site()
blogdown::build_site()
blogdown::serve_site()
xaringan::inf_mr()
xaringan::inf_mr()

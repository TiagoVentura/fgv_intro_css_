xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="",
main=colnames(resultado_hash)[1], cex.main=1)
# Mandetta Genocida
plot(V(net)$l1,V(net)$l2,pch=16,
col=V(net)$new.color, cex=log(resultado_hash[,5]+1),
xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="",
main=colnames(resultado_hash)[5], cex.main=1)
# Mandetta Genocida
plot(V(net)$l1,V(net)$l2,pch=16,
col=V(net)$new.color, cex=log(resultado_hash[,5]+1),
xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="",
main=colnames(resultado_hash)[5], cex.main=1)
ggplot(autoridade[[1]], aes(x=reorder(name,
ind),
y=ind)) +
geom_histogram(stat="identity", width=.5, color="black",
fill="darkred") +
coord_flip() +
xlab("") + ylab("") +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(size = 22, face = "bold"),
axis.title=element_text(size=16),
axis.text = element_text(size=12, face="bold"))
autoridade <- data_frame(name=V(net)$name, ind=V(net)$indegree,
membership=V(net)$membership) %>%
filter(membership==1| membership==2) %>%
split(.$membership) %>%
map(~ arrange(., desc(ind))) %>%
map(~ slice(., 1:30))
ggplot(autoridade[[1]], aes(x=reorder(name,
ind),
y=ind)) +
geom_histogram(stat="identity", width=.5, color="black",
fill="darkred") +
coord_flip() +
xlab("") + ylab("") +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(size = 22, face = "bold"),
axis.title=element_text(size=16),
axis.text = element_text(size=12, face="bold"))
ggplot(autoridade[[2]], aes(x=reorder(name,
ind),
y=ind)) +
geom_histogram(stat="identity", width=.5, color="black",
fill="yellow") +
coord_flip() +
xlab("") + ylab("") +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(size = 22, face = "bold"),
axis.title=element_text(size=16),
axis.text = element_text(size=12, face="bold"))
# Building a empty containes
temp <- rep(1,length(V(net)$membership))
new.color <- "white"
new.color[V(net)$membership==2] <- "red" ####
new.color[V(net)$membership==1] <- "blue" ####
# Adiciona a nova cor
V(net)$new.color <- new.color
#save first
my.den.plot(l=cbind(V(net)$l1,V(net)$l2),new.color=V(net)$new.color, ind=V(net)$indegre, legend =c("Anti-Bolsonaro", "Pro-Bolsonaro"))
# Funcao para visualizar a rede
my.den.plot <- function(l=l,new.color=new.color, ind=ind, legend){
library(KernSmooth)
#Numero efectivo de Comunidades
# ENCG<-round(1/sum(round(table(new.color)/sum(table(new.color)),3)^2),2)
#
est <- bkde2D(l, bandwidth=c(10, 10))
plot(l,cex=log(ind+1)/4, col=new.color, pch=16, xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="", axes=FALSE)
contour(est$x1, est$x2, est$fhat,  col = gray(.6), add=TRUE)
legend("topright", c(legend[1],legend[2]), pch = 17:18, col=c("#B2182B", "#2166AC"))
#text(-140,115,paste("ENCG: ",ENCG,sep=""), cex=1, srt=0)
}
#save first
my.den.plot(l=cbind(V(net)$l1,V(net)$l2),new.color=V(net)$new.color, ind=V(net)$indegre, legend =c("Anti-Bolsonaro", "Pro-Bolsonaro"))
# Funcao para visualizar a rede
my.den.plot <- function(l=l,new.color=new.color, ind=ind, legend){
library(KernSmooth)
#Numero efectivo de Comunidades
# ENCG<-round(1/sum(round(table(new.color)/sum(table(new.color)),3)^2),2)
#
est <- bkde2D(l, bandwidth=c(10, 10))
plot(l,cex=log(ind+1)/4, col=new.color, pch=16, xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="", axes=FALSE)
contour(est$x1, est$x2, est$fhat,  col = gray(.6), add=TRUE)
legend("topright", c(legend[1],legend[2]), pch = 17:18, col=c( "#2166AC", "#B2182B"))
#text(-140,115,paste("ENCG: ",ENCG,sep=""), cex=1, srt=0)
}
#save first
my.den.plot(l=cbind(V(net)$l1,V(net)$l2),new.color=V(net)$new.color, ind=V(net)$indegre, legend =c("Anti-Bolsonaro", "Pro-Bolsonaro"))
# Funcao para visualizar a rede
my.den.plot <- function(l=l,new.color=new.color, ind=ind, legend){
library(KernSmooth)
#Numero efectivo de Comunidades
# ENCG<-round(1/sum(round(table(new.color)/sum(table(new.color)),3)^2),2)
#
est <- bkde2D(l, bandwidth=c(10, 10))
plot(l,cex=log(ind+1)/4, col=new.color, pch=16, xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="", axes=FALSE)
contour(est$x1, est$x2, est$fhat,  col = gray(.6), add=TRUE)
legend("topright", c(legend[1],legend[2]), pch = 17:18, col=c( "#2166AC", "#B2182B"))
#text(-140,115,paste("ENCG: ",ENCG,sep=""), cex=1, srt=0)
}
#save first
my.den.plot(l=cbind(V(net)$l1,V(net)$l2),new.color=V(net)$new.color, ind=V(net)$indegre, legend =c("Anti-Bolsonaro", "Pro-Bolsonaro"))
# Funcao para visualizar a rede
my.den.plot <- function(l=l,new.color=new.color, ind=ind, legend){
library(KernSmooth)
#Numero efectivo de Comunidades
# ENCG<-round(1/sum(round(table(new.color)/sum(table(new.color)),3)^2),2)
#
est <- bkde2D(l, bandwidth=c(10, 10))
plot(l,cex=log(ind+1)/4, col=new.color, pch=16, xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="", axes=FALSE)
contour(est$x1, est$x2, est$fhat,  col = gray(.6), add=TRUE)
legend("topright", c(legend[2],legend[1]), pch = 17:18, col=c("#B2182B", "#2166AC"))
#text(-140,115,paste("ENCG: ",ENCG,sep=""), cex=1, srt=0)
}
# Building a empty containes
temp <- rep(1,length(V(net)$membership))
new.color <- "white"
new.color[V(net)$membership==2] <- "red" ####
new.color[V(net)$membership==1] <- "blue" ####
# Adiciona a nova cor
V(net)$new.color <- new.color
#save first
my.den.plot(l=cbind(V(net)$l1,V(net)$l2),new.color=V(net)$new.color, ind=V(net)$indegre, legend =c("Anti-Bolsonaro", "Pro-Bolsonaro"))
#save first
my.den.plot(l=cbind(V(net)$l1,V(net)$l2),new.color=V(net)$new.color, ind=V(net)$indegre, legend =c("Pro-Bolsonaro", "Anti-Bolsonaro"))
# CPI COVID
plot(V(net)$l1,V(net)$l2,pch=16,
col=V(net)$new.color, cex=log(resultado_hash[,1]+1),
xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="",
main=colnames(resultado_hash)[1], cex.main=1)
# Mandetta Genocida
plot(V(net)$l1,V(net)$l2,pch=16,
col=V(net)$new.color, cex=log(resultado_hash[,5]+1),
xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="",
main=colnames(resultado_hash)[5], cex.main=1)
# all
my.den.plot(l=cbind(V(net)$l1,V(net)$l2),new.color=V(net)$new.color, ind=V(net)$indegre, legend =c("Bolsonaro", "Anti-Bolsonaro"))
# CPI COVID
plot(V(net)$l1,V(net)$l2,pch=16,
col=V(net)$new.color, cex=log(resultado_hash[,1]+1),
xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="",
main=colnames(resultado_hash)[1], cex.main=1)
# Mandetta Genocida
plot(V(net)$l1,V(net)$l2,pch=16,
col=V(net)$new.color, cex=log(resultado_hash[,5]+1),
xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="",
main=colnames(resultado_hash)[5], cex.main=1)
save.image(file="aula_twitter.RData")
getwd()
vignette("rtweet")
# Ativar rtweet
#install.packages("rtweet") # somente uma vez
library(rtweet)
vignette("rtweet")
# Ativar rtweet
#install.packages("rtweet") # somente uma vez
library(rtweet)
# ativar outros pacotes
library(tidyverse)
library(igraph)
library(broom)
vignette("auth", package = "rtweet")
vignette("auth", package = "rtweet")
?search_tweets
# Checa se vieram retuites
bolsonaro_tweets$is_retweet
bolsonaro_tweets<-search_tweets("bolsonaro", n=50, include_rts = TRUE)
# Checa se vieram retuites
bolsonaro_tweets
# Glimpse
colnames(bolsonaro_tweets)
# Tweets dos membros da CPI do COVID.
timelines_covid <- get_timelines(c("renancalheiros", "ottoalencar", "EduGiraoOficial"), n=100)
timelines_covid
View(timelines_covid)
users <- lookup_users(c("renancalheiros", "ottoalencar", "EduGiraoOficial"))
users
users$description
favs <- get_favorites(c("renancalheiros", "ottoalencar", "EduGiraoOficial"))
favs
follow_renan <- get_followers("renancalheiros")
follow_renan
followers_renan <- lookup_users(follow_renan$user_id)
followers_renan %>%
slice(1:10) %>%
pull(description)
followers_renan
stream_tweets("",  timeout = 10) # adicione o tempo que voce quer coletar
stream_tweets(" ",  timeout = 10) # adicione o tempo que voce quer coletar
nada <-stream_tweets(" ",  timeout = 10) # adicione o tempo que voce quer coletar
nada
nada <-stream_tweets("",  timeout = 10) # adicione o tempo que voce quer coletar
?stream_tweets
nada
dados_bolsonaro_stream <- stream_tweets("bolsonaro",
timeout = 10,
file_name = "bolsonaro.json") # adicione o tempo que voce quer coletar
dados_bolsonaro_stream
dados_bolsonaro_stream
dados_paulo_freire=list()
dados_bolsonaro
dados_bolsonaro
dados_bolsonaro_rt <- dados_bolsonaro %>%
filter(is_retweet==TRUE)
# Criar uma edgelist = lista de conexoes da sua rede
data <- cbind(dados_bolsonaro_rt$screen_name, dados_bolsonaro_rt$retweet_screen_name)
head(data)
library(igraph)
# Cria um gráfico vazio
net <- graph.empty()
net
length(unique(c(data)))
as.character(unique(c(data)))
# Adiciona os nós = vertices
net <- add.vertices(net,
length(unique(c(data))), # número de nós
name=as.character(unique(c(data)))) # nomes unicos
net
net
data
# Add edges
net <- add.edges(net, t(data))
summary(net)
data
# Ou
g <- graph_from_data_frame(d=data, vertices=unique(c(data)))
summary(g)
summary(net)
dados_bolsonaro_rt
net <- graph.empty()
# Adiciona os nós = vertices
net <- add.vertices(net,
length(unique(c(data))), # número de nós
name=as.character(unique(c(data)))) # nomes unicos
# Add edges
net <- add.edges(net, t(data))
# Ou
g <- graph_from_data_frame(d=data, vertices=unique(c(data)))
summary(g)
summary(net)
dados_bolsonaro_rt$text
dados_bolsonaro_rt$screen_name
dados_bolsonaro_rt$retweet_screen_name
dados_bolsonaro_rt$urls_expanded_url
dados_bolsonaro_rt$hashtags
E(net)$text <- dados_bolsonaro_rt$text
E(net)$nameauth <- dados_bolsonaro_rt$screen_name
E(net)$namehub <- dados_bolsonaro_rt$retweet_screen_name
E(net)$web <- dados_bolsonaro_rt$urls_expanded_url
E(net)$hash <- dados_bolsonaro_rt$hashtags
summary(net)
summary(net)
V(net)$name
E(net)$namehub
# Adicionar indegree and outdegree
V(net)$outdegree<-degree(net, mode="out")
V(net)$indegree<-degree(net, mode="in")
summary(net)
l
head(l)
my.com.fast
my.com.fast
my.com.fast[[1]]
my.com.fast$membership
V(net)$l1 <- l[,1]
V(net)$l2 <- l[,2]
my.com.fast$membership
V(net)$membership <- my.com.fast$membership
comunidades<- data_frame(membership=V(net)$membership)
comunidades %>%
count(membership) %>%
arrange(desc(n)) %>%
top_n(5)
V(net)$membership
comunidades %>%
count(membership) %>%
arrange(desc(n)) %>%
top_n(5)
data_frame(name=V(net)$name, ind=V(net)$indegree,
membership=V(net)$membership) %>%
filter(membership==1| membership==2) %>%
split(.$membership)
autoridade <- data_frame(name=V(net)$name, ind=V(net)$indegree,
membership=V(net)$membership) %>%
filter(membership==1| membership==2) %>%
split(.$membership) %>%
map(~ arrange(., desc(ind))) %>%
map(~ slice(., 1:30))
autoridade
ggplot(autoridade[[1]], aes(x=reorder(name,
ind),
y=ind)) +
geom_histogram(stat="identity", width=.5, color="black",
fill="darkred") +
coord_flip() +
xlab("") + ylab("") +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(size = 22, face = "bold"),
axis.title=element_text(size=16),
axis.text = element_text(size=12, face="bold"))
ggplot(autoridade[[2]], aes(x=reorder(name,
ind),
y=ind)) +
geom_histogram(stat="identity", width=.5, color="black",
fill="yellow") +
coord_flip() +
xlab("") + ylab("") +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(size = 22, face = "bold"),
axis.title=element_text(size=16),
axis.text = element_text(size=12, face="bold"))
# plot igraph
plot.igraph(net,
layout=cbind(V(net)$l2,V(net)$l1),
vertex.size=log(V(net)$indegree),
vertex.label.color=1,
vertex.label=NA,
vertex.color=V(net)$membership,
vertex.frame.color=gray(.8),
edge.color=gray(.8),
edge.arrow.size=.2,
edge.curved=TRUE)
# Funcao para visualizar a rede
my.den.plot <- function(l=l,new.color=new.color, ind=ind, legend){
library(KernSmooth)
#Numero efectivo de Comunidades
# ENCG<-round(1/sum(round(table(new.color)/sum(table(new.color)),3)^2),2)
#
est <- bkde2D(l, bandwidth=c(10, 10))
plot(l,cex=log(ind+1)/4, col=new.color, pch=16, xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="", axes=FALSE)
contour(est$x1, est$x2, est$fhat,  col = gray(.6), add=TRUE)
legend("topright", c(legend[2],legend[1]), pch = 17:18, col=c("#B2182B", "#2166AC"))
#text(-140,115,paste("ENCG: ",ENCG,sep=""), cex=1, srt=0)
}
# Building a empty containes
temp <- rep(1,length(V(net)$membership))
new.color <- "white"
new.color[V(net)$membership==2] <- "red" ####
new.color[V(net)$membership==1] <- "blue" ####
# Adiciona a nova cor
V(net)$new.color <- new.color
#save first
my.den.plot(l=cbind(V(net)$l1,V(net)$l2),new.color=V(net)$new.color, ind=V(net)$indegre, legend =c("Pro-Bolsonaro", "Anti-Bolsonaro"))
# plot igraph
plot.igraph(net,
layout=cbind(V(net)$l2,V(net)$l1),
vertex.size=log(V(net)$indegree),
vertex.label.color=1,
vertex.label=NA,
vertex.color=V(net)$new.color,
vertex.frame.color=gray(.8),
edge.color=gray(.8),
edge.arrow.size=.2,
edge.curved=TRUE)
hashtags <- dados_bolsonaro_rt %>%
unnest(hashtags) %>%
count(hashtags) %>%
arrange(desc(n)) %>%
slice(1:30) %>%
drop_na()
# Contando as hashtags
ggplot(hashtags, aes(x=reorder(hashtags,
n),
y=n)) +
geom_histogram(stat="identity", width=.5, color="black",
fill="steelblue") +
coord_flip() +
xlab("") + ylab("") +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(size = 22, face = "bold"),
axis.title=element_text(size=16),
axis.text = element_text(size=12, face="bold"))
hashtags <- dados_bolsonaro_rt %>%
count(hashtags) %>%
arrange(desc(n)) %>%
slice(1:30) %>%
drop_na()
# Contando as hashtags
ggplot(hashtags, aes(x=reorder(hashtags,
n),
y=n)) +
geom_histogram(stat="identity", width=.5, color="black",
fill="steelblue") +
coord_flip() +
xlab("") + ylab("") +
theme_minimal(base_size = 12) +
theme(plot.title = element_text(size = 22, face = "bold"),
axis.title=element_text(size=16),
axis.text = element_text(size=12, face="bold"))
dados_bolsonaro_rt %>%
unnest(hashtags) %>%
count(hashtags)
dados_bolsonaro_rt %>%
unnest(hashtags) %>%
count(hashtags) %>%
arrange(desc(n)) %>%
slice(1:30)
hashtags <- dados_bolsonaro_rt %>%
unnest(hashtags) %>%
count(hashtags) %>%
arrange(desc(n)) %>%
slice(1:30) %>%
drop_na()
hashtags
# Vamos Coletar as Comunidades
autoridade <- data_frame(name=V(net)$name, membership=V(net)$membership)
dados_bolsonaro_hash <- dados_bolsonaro_rt %>%
left_join(autoridade, by=c("screen_name"="name")) %>%
unnest(hashtags) %>%
drop_na(hashtags)
table(dados_bolsonaro_hash$membership)
hashtags_por_comunidade <- dados_bolsonaro_hash %>%
filter(membership==1| membership==2) %>%
count(membership, hashtags) %>%
top_n(10, n)
ggplot(hashtags_por_comunidade, aes(x=reorder(hashtags,
n),
y=n, fill=as.factor(membership))) +
geom_histogram(stat="identity", width=.5, color="black") +
coord_flip() +
xlab("") + ylab("") +
scale_fill_manual(name="Comunidade", values=c("Red", "Yellow")) +
theme_minimal(base_size = 16) +
theme(plot.title = element_text(size = 22, face = "bold"),
axis.title=element_text(size=12),
axis.text = element_text(size=12, face="bold"),
strip.text = element_text(size=16)) +
facet_wrap(~membership, scale="free")
# Vamos primeiro selecionar as mídias mais ativadas
keynews <- head(sort(table(unlist(E(net)$hash)),decreasing=TRUE),12)
# Vamos primeiro selecionar as mídias mais ativadas
keynews <- head(sort(table(unlist(E(net)$hash)),decreasing=TRUE),12)
keynews
N<-length(keynews.names)
count.keynews<- array(0,dim=c(length(E(net)),N))
str(count.keynews)
count.keynews
keynews.names
# Looping
for(i in 1:N){
temp<- grepl(keynews.names[i], E(net)$hash, ignore.case = TRUE)
#temp <- str_match(E(net)$text,'Arangur[A-Za-z]+[A-Za-z0-9_]+')
count.keynews[temp==TRUE,i]<-1
Sys.sleep(0.1)
}
colnames(count.keynews)<- keynews.names
count.keynews
al
# Função para detectar ativação entre as conexões em rede.
fomfE<- function(var=var, adjV=adjV,adjE=adjE){
stemp <- map_dbl(adjE, function(x) sum(var[x]))
#mstemp <- sapply(adjV, function(x) mean(stemp[x]))
out<-cbind(stemp)
}
# Cria um container
resultado_hash<- array(0,dim=c(length(V(net)),N))
# Repita para cada uma das hashtags
for(i in 1:N){
bb<-fomfE(count.keynews[,i],al,el)
bb[bb[,1]=="NaN"]<-0
resultado_hash[,i]<- bb[,1]
}
resultado_hash
colnames(resultado_hash)<- keynews.names
resultado_hash
# all
my.den.plot(l=cbind(V(net)$l1,V(net)$l2),new.color=V(net)$new.color, ind=V(net)$indegre, legend =c("Bolsonaro", "Anti-Bolsonaro"))
# CPI COVID
plot(V(net)$l1,V(net)$l2,pch=16,
col=V(net)$new.color,
cex=log(resultado_hash[,1]+1),
xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="",
main=colnames(resultado_hash)[1], cex.main=1)
# all
my.den.plot(l=cbind(V(net)$l1,V(net)$l2),new.color=V(net)$new.color, ind=V(net)$indegre, legend =c("Bolsonaro", "Anti-Bolsonaro"))
# CPI COVID
plot(V(net)$l1,V(net)$l2,pch=16,
col=V(net)$new.color,
cex=log(resultado_hash[,1]+1),
xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="",
main=colnames(resultado_hash)[1], cex.main=1)
# Mandetta Genocida
plot(V(net)$l1,V(net)$l2,pch=16,
col=V(net)$new.color, cex=log(resultado_hash[,5]+1),
xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="",
main=colnames(resultado_hash)[5], cex.main=1)
# all
my.den.plot(l=cbind(V(net)$l1,V(net)$l2),new.color=V(net)$new.color, ind=V(net)$indegre, legend =c("Bolsonaro", "Anti-Bolsonaro"))
# CPI COVID
plot(V(net)$l1,V(net)$l2,pch=16,
col=V(net)$new.color,
cex=log(resultado_hash[,1]+1),
xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="",
main=colnames(resultado_hash)[1], cex.main=1)
# Mandetta Genocida
plot(V(net)$l1,V(net)$l2,pch=16,
col=V(net)$new.color, cex=log(resultado_hash[,5]+1),
xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="",
main=colnames(resultado_hash)[5], cex.main=1)
# all
my.den.plot(l=cbind(V(net)$l1,V(net)$l2),new.color=V(net)$new.color, ind=V(net)$indegre, legend =c("Bolsonaro", "Anti-Bolsonaro"))
# CPI COVID
plot(V(net)$l1,V(net)$l2,pch=16,
col=V(net)$new.color,
cex=log(resultado_hash[,1]+1),
xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="",
main=colnames(resultado_hash)[1], cex.main=1)
# Mandetta Genocida
plot(V(net)$l1,V(net)$l2,pch=16,
col=V(net)$new.color, cex=log(resultado_hash[,5]+1),
xlim=c(-160,140),ylim=c(-140,120), xlab="", ylab="",
main=colnames(resultado_hash)[5], cex.main=1)

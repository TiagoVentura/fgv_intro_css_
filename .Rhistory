scale_fill_manual(values=c("#5BBCD6","#FF0000"),
name="Polaridade em \n Discursos Legislativos") +
theme(legend.position = "bottom") +
labs(x="Partidos", y="Numero de Discursos") +
theme_bw()
# Graph
ggplot(part_pol,
aes(x = partido, y = n, fill = polarity_binary)) +
geom_col(alpha=.6, color="black") +
coord_flip() +
scale_fill_manual(values=c("#5BBCD6","#FF0000"),
name="Polaridade em \n Discursos Legislativos") +
labs(x="Partidos", y="Numero de Discursos") +
theme_bw() +
theme(legend.position = "bottom") +
```
# Graph
ggplot(part_pol,
aes(x = partido, y = n, fill = polarity_binary)) +
geom_col(alpha=.6, color="black") +
coord_flip() +
scale_fill_manual(values=c("#5BBCD6","#FF0000"),
name="Polaridade em \n Discursos Legislativos") +
labs(x="Partidos", y="Numero de Discursos") +
theme_bw() +
theme(legend.position = "bottom")
blogdown::serve_site()
blogdown::serve_site()
# Veja os dados
bolsonaro_tweets
knitr::opts_chunk$set(echo = TRUE, eval=TRUE, cache=TRUE, warning = FALSE)
bolsonaro_tweets<-search_tweets("bolsonaro", n=50, include_rts = TRUE)
library(rtweet)
library(tidyverse)
library(tidyverse)
bolsonaro_tweets<-search_tweets("bolsonaro", n=50, include_rts = TRUE)
library(tidyverse)
bolsonaro_tweets<-search_tweets("bolsonaro", n=50, include_rts = TRUE)
# Selecionar somente o texto
bolsonaro_tweets <- bolsonaro_tweets %>%
select(user_id, screen_name, text)
# Veja os dados
bolsonaro_tweets
# Veja os dados
bolsonaro_tweets
knitr::opts_chunk$set(echo = TRUE, eval=TRUE, cache=TRUE, warning = FALSE)
library(rtweet)
library(tidyverse)
bolsonaro_tweets<-search_tweets("bolsonaro", n=50, include_rts = TRUE)
# Selecionar somente o texto
bolsonaro_tweets <- bolsonaro_tweets %>%
select(user_id, screen_name, text)
# Veja os dados
bolsonaro_tweets
# Salvar como objeto de R
save(bolsonaro_tweets,file="bolsonaro_tweets.Rdata")
# Ver arquivos
list.files("data_txt")
# Salvar nomes
nomes <- list.files("data_txt")
# Criar endereço completo
path <- paste0("data_txt/", nomes)
# Abrir
dados <- map_chr(path, read_lines)
dados <- tibble(file=nomes, texto=dados)
dados
discursos <- read_csv("speeches.csv")
library(tidytext)
# Convertendo para o formato tidy.
tidy_discursos <- discursos %>%
mutate(id_discursos=1:nrow(.)) %>%
unnest_tokens(words, speech) #(output, input)
discursos %>%
unnest_tokens(words, speech, token="sentences") #(output, input)
discursos %>%
unnest_tokens(words, speech, token="ngrams", n=2) #(output, input)
tidy_discursos <- tidy_discursos %>%
group_by(id_discursos) %>%
mutate(total_palavras=n()) %>%
ungroup()
# Informações sobre os discursos
partido_st <- discursos %>%
group_by(partido) %>%
summarise(n_partidos=n())
nome_st <- discursos %>%
group_by(nome) %>%
summarise(n_dep=n())
uf_st <- discursos %>%
group_by(uf) %>%
summarise(n_uf=n())
tidy_discursos <- left_join(tidy_discursos, partido_st) %>%
left_join(nome_st) %>%
left_join(uf_st)
library(stopwords)
stop_words <- tibble(words=stopwords("portuguese"))
# Elimina com um Join
tidy_discursos <- tidy_discursos %>%
anti_join(stop_words)
estados <- tibble(words=unique(str_to_lower(tidy_discursos$uf)))
# Elimina com um Join
tidy_discursos <- tidy_discursos %>%
anti_join(estados)
function_names <- tibble(words=c("candidato", "candidata", "brasileira", "brasileiro",
"câmara", "municipio",
"municipal", "eleições", "cidade", "partido",
"cidadão", "deputado", "deputada", "caro", "cara",
"plano", "suplementar",
"voto","votar", "eleitor", "querido",
"sim", "não", "dia", "hoje", "amanhã", "amigo", "amiga",
"seção", "emenda", "i", "ii", "iii", "iv",
"colegas", "clausula", "prefeit*", "presidente",
"prefeitura", 'proposta','propostas','meta',
'metas','plano','governo','municipal','candidato',
'diretrizes','programa', "deputados", "federal",
'eleição','coligação','município', "senhor", "sr", "dr",
"excelentissimo", "nobre", "deputad*", "srs", "sras", "v.exa",
"san", "arial", "sentido", "fim", "minuto", "razão", "v.exa",
"país", "brasil", "tribuna", "congresso", "san", "symbol", "sans", "serif",
"ordem", "revisão", "orador", "obrigado", "parte", "líder", "bloco", "esc",
"sra", "oradora", "bloco", "times", "new", "colgano", "pronuncia", "colega",
"presidenta", "pronunciamento", "mesa", "parlamentares", "secretário", "seguinte",
"discurso","mato", "sul", "norte", "nordeste", "sudeste", "centro-oeste", "sul", "grosso",
"é", "ser", "casa", "todos", "sobre", "aqui", "nacional"))
tidy_discursos <- tidy_discursos %>%
anti_join(function_names)
tidy_discursos <- tidy_discursos %>%
mutate(words=str_remove_all(words, "[[:digit:]]"),
words=str_remove_all(words, "[:punct:]"))
tidy_discursos <- tidy_discursos %>%
mutate(words=str_trim(words),
words=str_squish(words),
words=stringi::stri_trans_general(words, "Latin-ASCII"))%>%
filter(words!="")
tidy_discursos %>%
count(words, sort = TRUE)
# Gráfico
tidy_discursos %>%
count(words, sort = TRUE) %>%
slice(1:25) %>%
mutate(word = reorder(words, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
theme_minimal()
library(scales)
# Total palavras por partido
total_palavras <- tidy_discursos %>%
select(partido, total_palavras) %>%
distinct() %>%
group_by(partido) %>%
summarize(total_words_per_party=sum(total_palavras)) %>%
filter(partido%in%c("PT", "PSDB"))
# Soma cada palavra por partido
palavras_partido <- tidy_discursos %>%
count(partido, words) %>%
filter(partido%in%c("PT", "PSDB"))
# Merge
partidos <- left_join(palavras_partido, total_palavras) %>%
mutate(prop=n/total_words_per_party) %>%
#untidy
select(words, partido, prop) %>%
pivot_wider(names_from=partido,
values_from=prop) %>%
drop_na() %>%
mutate(more=ifelse(PT>PSDB, "More PT", "More PSDB"))
# Graph
ggplot(partidos, aes(x = PSDB, y = PT,
alpha = abs(PT - PSDB),
color=more)) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = words), check_overlap = TRUE, vjust = 1.5, alpha=.8) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_manual(values=c("#5BBCD6","#FF0000"), name="") +
theme(legend.position="none") +
labs(y = "Proportion of Words (PT)", x = "Proportion of Words (PSDB)") +
theme_minimal()
# Usaremos este dicionário.
#devtools::install_github("sillasgonzaga/lexiconPT")
library(lexiconPT)
# Ver Dicionario
data("sentiLex_lem_PT02")
sent_pt <- as_tibble(sentiLex_lem_PT02)
# -1 negative +1 positive
tidy_discursos <- left_join(tidy_discursos, sent_pt, by=c("words"="term"))
# clean words with no sentiment
tidy_discursos_sent <- tidy_discursos %>%
mutate(polarity=ifelse(is.na(polarity), 0, polarity)) %>%
filter(polarity!=7)
tidy_discursos_sent
# sentimento por discursos
tidy_dicursos_av <- tidy_discursos_sent %>%
group_by(id_discursos) %>%
summarize(polarity=mean(polarity)) %>%
arrange(polarity)
library(reshape2)
library(wordcloud)
tidy_discursos_sent %>%
filter(polarity!=0) %>%
mutate(polarity=ifelse(polarity==1, "Positiva", "Negativa")) %>%
count(words, polarity, sort = TRUE) %>%
acast(words ~ polarity, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 200)
part_pol <- discursos %>%
mutate(id_discursos=1:nrow(.)) %>%
left_join(tidy_dicursos_av) %>%
mutate(polarity_binary=ifelse(polarity>0,"Positivo", "Negativo"),)%>%
count(partido, polarity_binary) %>%
mutate(n=ifelse(polarity_binary=="Negativo", -1*n, n)) %>%
filter(partido!="\n",
n!=0) %>%
arrange(polarity_binary, n) %>%
mutate(partido=fct_inorder(partido))
# Graph
ggplot(part_pol,
aes(x = partido, y = n, fill = polarity_binary)) +
geom_col(alpha=.6, color="black") +
coord_flip() +
scale_fill_manual(values=c("#5BBCD6","#FF0000"),
name="Polaridade em \n Discursos Legislativos") +
labs(x="Partidos", y="Numero de Discursos") +
theme_bw() +
theme(legend.position = "bottom")
library(rtweet)
library(tidyverse)
bolsonaro_tweets<-search_tweets("bolsonaro", n=50, include_rts = TRUE)
# Veja os dados
bolsonaro_tweets
# Selecionar somente o texto
bolsonaro_tweets <- bolsonaro_tweets %>%
select(user_id, screen_name, text)
# Veja os dados
bolsonaro_tweets
# Salvar como objeto de R
save(bolsonaro_tweets,file="bolsonaro_tweets.Rdata")
rm(bolsonaro_tweets)
bolsonaro_tweets
load("bolsonaro_tweets.Rdata")
bolsonaro_tweets
# Ver arquivos
list.files("data_txt")
# Ver arquivos
list.files("data_txt")
# Salvar nomes
nomes <- list.files("data_txt")
nomes
# Criar endereço completo
path <- paste0("data_txt/", nomes)
path
# Abrir
read_lines(path[1])
# Abrir
discurso1 <- read_lines(path[1])
discurso1
bolsonaro_tweets<-search_tweets("bolsonaro", n=50, include_rts = TRUE)
bolsonaro_tweets
path
# Abrir
#discurso1 <- read_lines(path[1])
dados <- map_chr(path, read_lines)
dados
dados <- tibble(file=nomes, texto=dados)
dados
discursos <- read_csv("speeches.csv")
discursos
library(tidytext)
discursos %>% slice(1:10)
# Convertendo para o formato tidy.
tidy_discursos <- discursos %>%
mutate(id_discursos=1:nrow(.)) %>%
unnest_tokens(words, speech) #(output, input)
tidy_discursos %>% slice(1:100)
discursos
discursos %>%
unnest_tokens(words, speech, token="sentences") #(output, input)
tidy_discursos %>%
group_by(id_discursos)
tidy_discursos <- tidy_discursos %>%
group_by(id_discursos) %>%
mutate(total_palavras=n()) %>%
ungroup()
tidy_discursos
partido_st <- discursos %>%
group_by(partido) %>%
summarise(n_partidos=n())
partido_st
nome_st <- discursos %>%
group_by(nome) %>%
summarise(n_dep=n())
uf_st <- discursos %>%
group_by(uf) %>%
summarise(n_uf=n())
nome_st
tidy_discursos <- left_join(tidy_discursos, partido_st) %>%
left_join(nome_st) %>%
left_join(uf_st)
tidy_discursos
library(stopwords)
stopwords("portuguese")
stop_words <- tibble(words=stopwords("portuguese"))
stop_words
# Elimina com um Join
dim(tidy_discursos)
tidy_discursos <- tidy_discursos %>%
anti_join(stop_words)
dim(tidy_di)
dim(tidy_discursos)
estados <- tibble(words=unique(str_to_lower(tidy_discursos$uf)))
estados
# Elimina com um Join
tidy_discursos <- tidy_discursos %>%
anti_join(estados)
dim(tidy_discursos)
function_names <- tibble(words=c("candidato", "candidata", "brasileira", "brasileiro",
"câmara", "municipio",
"municipal", "eleições", "cidade", "partido",
"cidadão", "deputado", "deputada", "caro", "cara",
"plano", "suplementar",
"voto","votar", "eleitor", "querido",
"sim", "não", "dia", "hoje", "amanhã", "amigo", "amiga",
"seção", "emenda", "i", "ii", "iii", "iv",
"colegas", "clausula", "prefeit*", "presidente",
"prefeitura", 'proposta','propostas','meta',
'metas','plano','governo','municipal','candidato',
'diretrizes','programa', "deputados", "federal",
'eleição','coligação','município', "senhor", "sr", "dr",
"excelentissimo", "nobre", "deputad*", "srs", "sras", "v.exa",
"san", "arial", "sentido", "fim", "minuto", "razão", "v.exa",
"país", "brasil", "tribuna", "congresso", "san", "symbol", "sans", "serif",
"ordem", "revisão", "orador", "obrigado", "parte", "líder", "bloco", "esc",
"sra", "oradora", "bloco", "times", "new", "colgano", "pronuncia", "colega",
"presidenta", "pronunciamento", "mesa", "parlamentares", "secretário", "seguinte",
"discurso","mato", "sul", "norte", "nordeste", "sudeste", "centro-oeste", "sul", "grosso",
"é", "ser", "casa", "todos", "sobre", "aqui", "nacional"))
tidy_discursos <- tidy_discursos %>%
anti_join(function_names)
dim(tidy_discursos)
tidy_discursos <- tidy_discursos %>%
mutate(words=str_remove_all(words, "[[:digit:]]"),
words=str_remove_all(words, "[:punct:]"))
dim(tidy_discursos)
tidy_discursos <- tidy_discursos %>%
mutate(words=str_trim(words),
words=str_squish(words),
words=stringi::stri_trans_general(words, "Latin-ASCII"))%>%
filter(words!="")
dim(tidy_discursos)
tidy_discursos %>%
count(words, sort = TRUE)
tidy_discursos %>%
count(words, sort = TRUE) %>%
slice(1:25) %>%
mutate(word = reorder(words, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
theme_minimal()
# Gráfico
tidy_discursos %>%
count(words, sort = TRUE) %>%
slice(1:25) %>%
mutate(word = reorder(words, n)) %>%
ggplot(aes(n, word)) +
geom_col() +
labs(y = NULL) +
theme_minimal()
library(scales)
tidy_discursos %>%
select(partido, total_palavras) %>%
distinct()
# Total palavras por partido
total_palavras <- tidy_discursos %>%
select(partido, total_palavras) %>%
distinct() %>%
group_by(partido) %>%
summarize(total_words_per_party=sum(total_palavras)) %>%
filter(partido%in%c("PT", "PSDB"))
total_palavras
tidy_discursos %>%
count(partido, words)
# Soma cada palavra por partido
palavras_partido <- tidy_discursos %>%
count(partido, words) %>%
filter(partido%in%c("PT", "PSDB"))
palavras_partido
# Merge
partidos <- left_join(palavras_partido, total_palavras) %>%
mutate(prop=n/total_words_per_party) %>%
#untidy
select(words, partido, prop) %>%
pivot_wider(names_from=partido,
values_from=prop) %>%
drop_na() %>%
mutate(more=ifelse(PT>PSDB, "More PT", "More PSDB"))
partidos
ggplot(partidos, aes(x = PSDB, y = PT,
alpha = abs(PT - PSDB),
color=more)) +
geom_abline(color = "gray40", lty = 2) +
geom_jitter(alpha = 0.1, size = 2.5, width = 0.3, height = 0.3) +
geom_text(aes(label = words), check_overlap = TRUE, vjust = 1.5, alpha=.8) +
scale_x_log10(labels = percent_format()) +
scale_y_log10(labels = percent_format()) +
scale_color_manual(values=c("#5BBCD6","#FF0000"), name="") +
theme(legend.position="none") +
labs(y = "Proportion of Words (PT)", x = "Proportion of Words (PSDB)") +
theme_minimal()
# Usaremos este dicionário.
#devtools::install_github("sillasgonzaga/lexiconPT")
library(lexiconPT)
# Ver Dicionario
data("sentiLex_lem_PT02")
sent_pt <- as_tibble(sentiLex_lem_PT02)
sent_pt
tidy_discursos <- left_join(tidy_discursos, sent_pt, by=c("words"="term"))
tidy_discursos
# clean words with no sentiment
tidy_discursos_sent <- tidy_discursos %>%
mutate(polarity=ifelse(is.na(polarity), 0, polarity)) %>%
filter(polarity!=7)
# sentimento por discursos
tidy_dicursos_av <- tidy_discursos_sent %>%
group_by(id_discursos) %>%
summarize(polarity=mean(polarity)) %>%
arrange(polarity)
tidy_discursos_av
tidy_dicursos_av
tidy_dicursos_av
library(reshape2)
library(wordcloud)
tidy_discursos_sent %>%
filter(polarity!=0) %>%
mutate(polarity=ifelse(polarity==1, "Positiva", "Negativa")) %>%
count(words, polarity, sort = TRUE) %>%
acast(words ~ polarity, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 200)
tidy_discursos_sent %>%
filter(polarity!=0) %>%
mutate(polarity=ifelse(polarity==1, "Positiva", "Negativa")) %>%
count(words, polarity, sort = TRUE)
tidy_discursos_sent %>%
filter(polarity!=0) %>%
mutate(polarity=ifelse(polarity==1, "Positiva", "Negativa")) %>%
count(words, polarity, sort = TRUE) %>%
acast(words ~ polarity, value.var = "n", fill = 0)
tidy_discursos_sent %>%
filter(polarity!=0) %>%
mutate(polarity=ifelse(polarity==1, "Positiva", "Negativa")) %>%
count(words, polarity, sort = TRUE) %>%
acast(words ~ polarity, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 200)
tidy_discursos_sent
tidy_discursos_sent %>%
filter(polarity!=0, partido=="PT" ) %>%
mutate(polarity=ifelse(polarity==1, "Positiva", "Negativa")) %>%
count(words, polarity, sort = TRUE) %>%
acast(words ~ polarity, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("gray20", "gray80"),
max.words = 200)
tidy_discursos_sent %>%
filter(polarity!=0, partido=="PSDB" ) %>%
mutate(polarity=ifelse(polarity==1, "Positiva", "Negativa")) %>%
count(words, polarity, sort = TRUE) %>%
acast(words ~ polarity, value.var = "n", fill = 0) %>%
comparison.cloud(colors = c("blue", "steelblue"),
max.words = 200)
part_pol <- discursos %>%
mutate(id_discursos=1:nrow(.)) %>%
left_join(tidy_dicursos_av) %>%
mutate(polarity_binary=ifelse(polarity>0,"Positivo", "Negativo"))%>%
count(partido, polarity_binary) %>%
mutate(n=ifelse(polarity_binary=="Negativo", -1*n, n)) %>%
filter(partido!="\n",
n!=0) %>%
arrange(polarity_binary, n) %>%
mutate(partido=fct_inorder(partido))
discursos
part_pol <- discursos %>%
mutate(id_discursos=1:nrow(.)) %>%
left_join(tidy_dicursos_av) %>%
mutate(polarity_binary=ifelse(polarity>0,"Positivo", "Negativo"))%>%
count(partido, polarity_binary) %>%
mutate(n=ifelse(polarity_binary=="Negativo", -1*n, n)) %>%
filter(partido!="\n",
n!=0) %>%
arrange(polarity_binary, n) %>%
mutate(partido=fct_inorder(partido))
part_pol
# Graph
ggplot(part_pol,
aes(x = partido, y = n, fill = polarity_binary)) +
geom_col(alpha=.6, color="black") +
coord_flip() +
scale_fill_manual(values=c("#5BBCD6","#FF0000"),
name="Polaridade em \n Discursos Legislativos") +
labs(x="Partidos", y="Numero de Discursos") +
theme_bw() +
theme(legend.position = "bottom")
# Graph
ggplot(part_pol,
aes(x = partido, y = n, fill = polarity_binary)) +
geom_col(alpha=.6, color="black") +
coord_flip() +
scale_fill_manual(values=c("#FF0000", "#5BBCD6"),
name="Polaridade em \n Discursos Legislativos") +
labs(x="Partidos", y="Numero de Discursos") +
theme_bw() +
theme(legend.position = "bottom")

filter(NUM_TURNO==1) %>%
# agrupando por candidato presidencial
group_by(NUMERO_CANDIDATO, NOME_MESO) %>%
# soma de votos por município
summarise(voto_macro=mean(QTDE_VOTOS),
voto_min=min(QTDE_VOTOS),
voto_max=max(QTDE_VOTOS))
pres_rio %>%
count(NOME_MUNICIPIO, NOME_MESO)
pres_rio %>%
count(NOME_MUNICIPIO)
pres_rio %>%
count(NUMERO_CANDIDATO)
pres_rio %>%
slice(1:10)
pres_rio %>%
rowid_to_column()
pres_rio %>%
rowid_to_column() %>%
select(1:5)
cepespR::get_assets()
get_candidates(year="2018", position="President")
data1 <- tibble(nome=c("A", "B", "C"),
value=c(10, 20, 30))
data1
data1 <- tibble(nome=c("A", "B", "C"),
value=c(10, 20, 30))
data2 <- tibble(nome=c("A", "D", "C"),
value2=c(10, 50, 30))
left_join(data1, data2)
data2 <- data2 %>%
select(chave=nome, everything())
data2 <- data2 %>%
select(chave=nome, everything())
data2
left_join(data1, data2, by=c("nome"="chave"))
candidatos <- get_candidates(year=2018, position="President")
votos <- get_votes(year = 2018, position="President")
votos
# Banco Candidatos
candidatos <- get_candidates(year=2018, position="President") %>%
as_tibble()
# Banco Votos
votos <- get_votes(year = 2018, position="President") %>%
as_tibble()
cand_votes <- left_join(candidatos, votos)
glimpse(candidatos)
cand_votes <- left_join(candidatos, votos, by=c("NUM_TURNO", "NUMERO_CANDIDATO"))
glimpse(cand_votes)
?get_votes
# Banco Votos
votos <- get_votes(year = 2018, position="President", state="RJ") %>%
as_tibble()
votos
bind_rows(data1, data2)
data1 <- tibble(nome=c("A", "B", "C"),
value=c(10, 20, 30))
data2 <- tibble(nome=c("A", "D", "C"),
value2=c(10, 50, 30))
data3 <- data2 %>%
# alterando o nome
select(chave=nome, everything())
bind_rows(data1, data2)
bind_rows(data1, data3)
rbind(data1, data3)
bind_cols(data1, data2)
dep_rio
dep_rio <- get_candidates(year=2018, position="Federal Deputy",
state="RJ")
dep_rio <- get_candidates(year=2018,
position="Federal Deputy")
dep_rio
dep_rio <- get_candidates(year=2018,
position="Federal Deputy") %>%
as_tibble()
dep_rio
table(dep_rio$COD_SIT_TOT_TURNO, dep_rio$DESC_SIT_TOT_TURNO)
pres_rio
gapminder
library(tidyverse)
gapminder
library(tidyr)
gapminder
gapminder
??gapminder
library(gapminder)
gapminder
library(gapminder)
gapminder
wide <- tibble(pais=c("Brasil", "Uruguai", "Chile", "Argentina"),
vacina_fev= c(FALSE, TRUE, FALSE, TRUE),
vacina_marco=c(FALSE, TRUE, TRUE, TRUE),
vacina_abril=c(FALSE, TRUE, TRUE, TRUE))
wide
wide <- tibble(pais=c("Brasil", "Uruguai", "Chile", "Argentina"),
vacina_fev= c(FALSE, TRUE, FALSE, TRUE),
vacina_marco=c(FALSE, TRUE, TRUE, TRUE),
vacina_abril=c(FALSE, TRUE, TRUE, TRUE))
wide
wide <- tibble(pais=c("Brasil", "Uruguai", "Chile"),
pres_ano_2010= c("Lula", "Mujica", "Pinera"),
pres_ano_2014=c("Dilma", "Tabare", "Bachelet"),
pres_ano_2018=c("Temer", "Lacalle", "Pinera"))
wide
![](/figs/untidy.png){ width=80% }
tibble(pais=c("Brasil", "Brasil",  "Argentina", "Argentina"),
ano = c(2020, 2020),
covid = c("Casos", "Vacinas", "Casos", "Vacinas"),
numero= c(10500000, 6535363, 2100000, 1800000))
tibble(pais=c("Brasil", "Brasil",  "Argentina", "Argentina"),
ano = c(2020, 2020, 2020, 2020),
covid = c("Casos", "Vacinas", "Casos", "Vacinas"),
numero= c(10500000, 6535363, 2100000, 1800000))
## pivot_longer (untidy -> tidy)
tab1 <- tibble(pais=c("Brasil", "Argentina"),
ano = c(2020, 2020),
presidente_vice = c("Bolsonaro-Mourão", "Fernandez-Kirchner"))
tab1
wide
wide %>%
pivot_longer(cols=c(pres_ano_2010, pres_ano_2014,
pres_ano_2018),
names_to="presidente_ano",
values_to="presidente")
tab
wide <- tibble(pais=c("Brasil", "Uruguai", "Chile"),
pres_ano_2010= c("Lula", "Mujica", "Pinera"),
pres_ano_2014=c("Dilma", "Tabare", "Bachelet"),
pres_ano_2018=c("Temer", "Lacalle", "Pinera"))
tab <- tibble(pais=c("Brasil", "Uruguai", "Argentina"),
t_2010 = c(5, 1, 2),
i_2014 = c(10, 9, 9),
i_2018 = c(0, 1, 2))
tab
tab %>%
pivot_longer(cols = c(contains("t")),
names_to="t",
values_to="values")
tab %>%
pivot_longer(cols = contains("t"),
names_to="t",
values_to="values")
tab <- tibble(pais=c("Brasil", "Uruguai", "Argentina"),
i_2010 = c(5, 1, 2),
i_2014 = c(10, 9, 9),
i_2018 = c(0, 1, 2))
tab %>%
pivot_longer(cols = contains("i"),
names_to="t",
values_to="values")
tab %>%
pivot_longer(cols = c(contains("i")),
names_to="t",
values_to="values")
tab <- tibble(pais=c("Brasil", "Uruguai", "Argentina"),
i_2010 = c(5, 1, 2),
i_2014 = c(10, 9, 9),
i_2018 = c(0, 1, 2))
tab
tab %>%
pivot_longer(cols = c(starts_with("i")),
names_to="t",
values_to="values")
tab2
tab2 <- tibble(pais=c("Brasil", "Brasil",  "Argentina", "Argentina"),
ano = c(2020, 2020, 2020, 2020),
covid = c("Casos", "Vacinas", "Casos", "Vacinas"),
numero= c(10500000, 6535363, 2100000, 1800000))
tab2
?pivot_wider
# Veja os dados
tab2
# tidying
tab2 %>%
pivot_wider(names_from=covid,
values_from=numero)
tab1
tab1 %>%
separate(presidente_vice, into=c("presidente", "vice"))
tab1 %>%
separate(presidente_vice, into=c("presidente", "vice"),
sep="-")
xaringan::inf_mr()
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message=FALSE, warning = FALSE, error = FALSE)
x  %>%
str_to_upper() %>%
str_c("-FGV") %>%
str_to_title()
blogdown::build_site()
blogdown::serve_site()
library(cepespR)
library(cepespR)
?get_coalitions
# Banco Candidatos
candidatos <- get_candidates(year=2018, position="Federal Deputy", state="RJ") %>%
as_tibble()
?get_candidates
# Banco Candidatos
candidatos <- get_candidates(year=2018, position="Federal Deputy", state="Rj") %>%
as_tibble()
# Banco Candidatos
candidatos <- get_candidates(year=2018, position="Federal Deputy") %>%
as_tibble()
# Banco Candidatos Brasil inteiro
candidatos <- get_candidates(year=2018, position="Federal Deputy", state="RJ") %>%
as_tibble()
candidatos
votos
votos
candidatos
left_join(candidatos, votos, by=c("NOME_UF"))
candidatos
left_join(candidatos, votos, by=c("SIGLA_UF"="NOME_UF"))
candidatos
votos
left_join(candidatos, votos, by=c("SIGLA_UF"="NOME_UF", "NUMERO_CANDIDATO"))
candidatos
inner_join(candidatos, votos, by=c("SIGLA_UF"="NOME_UF", "NUMERO_CANDIDATO"))
candidatos
table(candidatos$SIGLA_UF)
table(votos$UF)
inner_join(candidatos, votos, by=c("SIGLA_UF"="UF", "NUMERO_CANDIDATO")) %>%
group_by()
table(votos$UF)
table(candidatos$SIGLA_UF)
table(candidatos$SIGLA_UF)
table(votos$UF)
table(candidatos$NUMERO_CANDIDATO)
table(votos$NUMERO_CANDIDATO)
# Banco Votos
votos <- get_votes(year = 2018, position="Federal Deputy", state="RJ") %>%
as_tibble()
inner_join(candidatos, votos, by=c("SIGLA_UF"="UF", "NUMERO_CANDIDATO"))
inner_join(candidatos, votos, by=c("SIGLA_UF"="UF", "NUMERO_CANDIDATO")) %>%
group_by(DESCRICAO_OCUPACAO) %>%
summarise(votos=sum(QTDE_VOTOS)) %>%
arrange(desc(votos))
library(tidyverse)
blogdown::build_site()
blogdown::serve_site()
data2
data1 <- tibble(nome=c("A", "B", "C"),
value=c(10, 20, 30))
data2 <- tibble(nome=c("A", "D", "C"),
value2=c(10, 50, 30))
library(tidyverse)
data1 <- tibble(nome=c("A", "B", "C"),
value=c(10, 20, 30))
data2 <- tibble(nome=c("A", "D", "C"),
value2=c(10, 50, 30))
data2
data3 <- data2 %>%
# alterando o nome
select(nome, value=value2)
left_join(data1, data2, by=c("nome", "value"))
left_join(data1, data3, by=c("nome", "value"))
blogdown::build_site()
blogdown::serve_site()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
xaringan::inf_mr()
setwd("./content/assignment/")
library(tidyverse)
d <- read.csv("mtcars.csv")
glimpse(d)
str(d)
?read.csv
d$nome=="Tiago"
d <- data.frame(nome=c("Tiago", "Rafaela", "Bernardo", "Talita", "Bruno"),
sobrenome=c("Ventura", "Rodrigues", "Cotrim", "Tanscheit", "Moreno"),
nasc=c("30-12-1986", "08-07-1988", "02-12-1984", "09-11-2000", "20-10-1982"))
d$nome=="Tiago"
d$nome=="Tiago"
d[ , ]
d[c(TRUE, FALSE, TRUE, FALSE, FALSE) , ]
d$nome=="Tiago"
d[d$nome=="Tiago", ]
d[d$nome=="Tiago", "sobrenome" ]
as.Date("30-12-1986")
as.Date("30-12-1986")
class(as.Date("30-12-1986"))
d <- data.frame(nome=c("Tiago", "Rafaela", "Bernardo", "Talita", "Bruno"),
sobrenome=c("Ventura", "Rodrigues", "Cotrim", "Tanscheit", "Moreno"),
nasc=as.Date(c("30-12-1986", "08-07-1988", "02-12-1984", "09-11-2000", "20-10-1982")))
d
glimpse(d)
# Create containers
m=c()
class_ <- c()
unique_v <- c()
l <- list()
# Iterate for each collumn.
for(i in 1:ncol(mtcars)){
m[i]=mean(mtcars[,i])
class_[i]=class(mtcars[,i])
unique_v[i]=length(unique(mtcars[,i]))
}
#Print
m
class_
unique_v
mean(mtcars[,8])
class(mtcars[,8])
length(unique(mtcars[,8]))
mean(mtcars[,1:8])
mtcars[,1:8]
mean(mtcars[,1:8])
mean(mtcars[,1:2])
mean(c(mtcars[,1:2])
mean(c(mtcars[,1:2]))
mean(c(mtcars[,1:2]))
for(i in 1:8){
mean(mtcars[,i])
class(mtcars[,i])
length(unique(mtcars[,i]))
}
for(i in 1:8){
print(i)
mean(mtcars[,i])
class(mtcars[,i])
length(unique(mtcars[,i]))
}
for(i in 1:ncol(mtcars)){
print(i)
print(mean(mtcars[,i]))
print(class(mtcars[,i]))
print(length(unique(mtcars[,i])))
}
# Create containers
m=c()
class_ <- c()
unique_v <- c()
# Iterate for each collumn.
for(i in 1:ncol(mtcars)){
m[i]=mean(mtcars[,i])
class_[i]=class(mtcars[,i])
unique_v[i]=length(unique(mtcars[,i]))
}
#Print
m
class_
unique_v
m=c()
class_ <- c()
unique_v <- c()
m
class_
unique_v
m=c()
class_ <- c()
unique_v <- c()
# Iterate for each collumn.
for(i in 1:ncol(mtcars)){
m[i]=mean(mtcars[,i])
class_[i]=class(mtcars[,i])
unique_v[i]=length(unique(mtcars[,i]))
}
#Print
m
class_
unique_v
x <- c(1:10)
x - mean(x)
denominador <- length(x)
nominador <- sum((x - mean(x))^2)
numerador <- sum((x - mean(x))^2)
denominador <- length(x)
numerador <- sum((x - mean(x))^2)
variancia <- numerador/denominador
var <- function(x){
denominador <- length(x)
numerador <- sum((x - mean(x))^2)
variancia <- numerador/denominador
return(variancia)
}
var(1:100)
variancia_t <- function(x){
denominador <- length(x)
numerador <- sum((x - mean(x))^2)
variancia <- numerador/denominador
return(variancia)
}
variancia_t(1:100)
variancia_t <- function(x){
x <- c(1:10)
denominador <- length(x)
numerador <- sum((x - mean(x))^2)
variancia <- numerador/denominador
return(variancia)
}
variancia_t(1:100)
variancia_t <- function(x){
denominador <- length(x)
numerador <- sum((x - mean(x))^2)
variancia <- numerador/denominador
return(variancia)
}
variancia_t(1:100)
library(tidyverse)
class(mtcars)
mtcars
dim(mtcars)
mtcars
mtcars_tib <- as_tibble(mtcars)
mtcars_tib
tibble(a=c("Tiago", "Ventura"),
b=c("nome", "sobrenome"))
data.frame(a=c("Tiago", "Ventura"),
b=c("nome", "sobrenome"))
tibble(a=c("Tiago", "Ventura"),
b=c("nome", "sobrenome"))
data.frame(a=c("Tiago", "Ventura"),
b=c("nome", "sobrenome"))
x <- c(1:10)
round(exp(sqrt(mean(x))), 1)
x %>%
mean()
x %>%
mean()
x %>%
mean() %>%
sqrt()
x %>%
mean() %>%
sqrt() %>%
exp()
x %>%
mean() %>%
sqrt() %>%
exp() %>%
round(1)
mean(x) %>%
sqrt() %>%
exp() %>%
round(1)
sample(1:1000, 500, replace=TRUE)
sample(1:1000, 500, replace=TRUE) %>%
density()
# Não rode este código.
sample(1:1000, 500, replace=TRUE) %>%
density() %>% # funcao 1.
plot() # função 2.
# Não rode este código.
sample(1:1000, 500, replace=TRUE) %>%
plot() # função 2.
# Não rode este código.
sample(1:1000, 500, replace=TRUE) %>%
plot() # função 2.
# Não rode este código.
sample(1:1000, 500, replace=TRUE) %>%
plot() # função 2.
# Não rode este código.
sample(1:1000, 500, replace=TRUE) %>%
plot() # função 2.
# Não rode este código.
sample(1:1000, 500, replace=TRUE) %>%
plot() # função 2.
sample(1:1000, 500, replace=TRUE) %>%
density() %>% # funcao 1.
plot() # função 2.
# Não rode este código.
sample(1:1000, 500, replace=TRUE) %>%
density(.) %>% # funcao 1.
plot(.) # função 2.
data_frame(a=rnorm(100, 0, 1),
b=runif(100, 0, 10))
data_frame(a=rnorm(100, 0, 1),
b=runif(100, 0, 10))
data_frame(a=rnorm(100, 0, 1),
b=runif(100, 0, 10)) %>%
lm(b ~ a, data=.)
sample(1:1000, 500, replace=TRUE) %>%
density() %>% # funcao 1.
plot() # função 2.
# Não rode este código.
plot_1<-sample(1:1000, 500, replace=TRUE) %>%
density() %>% # funcao 1.
plot() # função 2.
plot_1
# Não rode este código.
plot_1<- sample(1:1000, 500, replace=TRUE) %>%
density() %>% # funcao 1.
plot() # função 2.
plot_1
sample(1:1000, 500, replace=TRUE)
# Não rode este código.
plot_1<- sample(1:1000, 500, replace=TRUE) %>%
density()
# Não rode este código.
dens_1 <- sample(1:1000, 500, replace=TRUE) %>%
density()
dens_1
plot(dens_1)
library(cepespR)
library(tidyverse)
pres_rio <- get_votes(year = 2018,
position = "Presidente",
regional_aggregation = "Municipio",
state="RJ") %>%
as_tibble()
pres_rio
pres_rio
pres_rio %>% # Dados
select(., ANO_ELEICAO, SIGLA_UE, NOME_MUNICIPIO, COD_MUN_IBGE) # colunas
select(pres_rio, ANO_ELEICAO, SIGLA_UE, NOME_MUNICIPIO, COD_MUN_IBGE) # colunas
# R base
pres_rio[   , c("ANO_ELEICAO", "SIGLA_UE", "NOME_MUNICIPIO", "COD_MUN_IBGE")]
# Select dplyr
pres_rio %>% # Dados
select(ANO_ELEICAO, SIGLA_UE, NOME_MUNICIPIO, COD_MUN_IBGE) # colunas
